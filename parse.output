Terminals unused in grammar

   STRING
   TYPEDEF
   ENUMBER
   _IMAGINARY


State 15 conflicts: 4 shift/reduce
State 19 conflicts: 2 shift/reduce
State 21 conflicts: 4 shift/reduce
State 22 conflicts: 4 shift/reduce
State 50 conflicts: 2 shift/reduce
State 51 conflicts: 1 shift/reduce
State 54 conflicts: 1 shift/reduce
State 57 conflicts: 1 shift/reduce
State 60 conflicts: 2 shift/reduce
State 61 conflicts: 1 shift/reduce
State 64 conflicts: 2 shift/reduce
State 65 conflicts: 1 shift/reduce
State 99 conflicts: 1 shift/reduce
State 106 conflicts: 1 shift/reduce
State 109 conflicts: 1 shift/reduce
State 192 conflicts: 1 shift/reduce
State 354 conflicts: 1 shift/reduce
State 384 conflicts: 1 shift/reduce
State 410 conflicts: 1 shift/reduce


Grammar

    0 $accept: start $end

    1 start: %empty
    2      | start top_level_decl

    3 top_level_decl: decl
    4               | func_def

    5 func_def: full_func_decl compound_stmt

    6 full_func_decl: decl_spec func_decl

    7 decl_or_stmt_list: decl_or_stmt
    8                  | decl_or_stmt_list decl_or_stmt

    9 decl_or_stmt: decl
   10             | stmt

   11 decl: decl_spec init_decl_list ';'
   12     | forward_decl
   13     | struct_spec ';'

   14 decl_spec: stg_spec
   15          | type_spec
   16          | struct_spec
   17          | type_qual
   18          | func_spec
   19          | decl_spec type_spec
   20          | decl_spec struct_spec
   21          | decl_spec stg_spec
   22          | decl_spec type_qual
   23          | decl_spec func_spec

   24 init_decl_list: declarator
   25               | init_decl_list ',' declarator

   26 stg_spec: AUTO
   27         | EXTERN
   28         | REGISTER
   29         | STATIC

   30 func_spec: INLINE

   31 type_spec: SHORT
   32          | SHORT INT
   33          | SIGNED SHORT
   34          | SIGNED SHORT INT
   35          | INT
   36          | SIGNED INT
   37          | SIGNED
   38          | LONG
   39          | LONG INT
   40          | SIGNED LONG
   41          | SIGNED LONG INT
   42          | LONG LONG
   43          | LONG LONG INT
   44          | SIGNED LONG LONG
   45          | SIGNED LONG LONG INT
   46          | UNSIGNED SHORT
   47          | SHORT UNSIGNED
   48          | UNSIGNED
   49          | UNSIGNED LONG
   50          | LONG UNSIGNED
   51          | UNSIGNED LONG LONG
   52          | LONG LONG UNSIGNED
   53          | UNSIGNED SHORT INT
   54          | SHORT UNSIGNED INT
   55          | UNSIGNED INT
   56          | UNSIGNED LONG INT
   57          | LONG UNSIGNED INT
   58          | UNSIGNED LONG LONG INT
   59          | LONG LONG UNSIGNED INT
   60          | CHAR
   61          | SIGNED CHAR
   62          | UNSIGNED CHAR
   63          | _BOOL
   64          | FLOAT
   65          | DOUBLE
   66          | LONG DOUBLE
   67          | FLOAT _COMPLEX
   68          | DOUBLE _COMPLEX
   69          | LONG DOUBLE _COMPLEX
   70          | VOID

   71 struct_spec: enum_type_spec
   72            | struct_type_spec
   73            | union_type_spec

   74 type_qual: CONST
   75          | VOLATILE
   76          | RESTRICT

   77 declarator: pointer_decl
   78           | direct_decl

   79 direct_decl: simple_decl
   80            | '(' declarator ')'
   81            | arr_decl
   82            | func_decl

   83 simple_decl: IDENT

   84 pointer_decl: pointer direct_decl

   85 pointer: '*'
   86        | '*' pointer

   87 abstract_decl: pointer
   88              | direct_abstract_decl
   89              | pointer direct_abstract_decl

   90 arr_decl: direct_decl '[' ']'
   91         | direct_decl '[' NUMBER ']'

   92 func_decl: direct_decl '(' param_type_list ')'
   93          | direct_decl '(' ')'
   94          | direct_decl '(' ident_list ')'

   95 param_type_list: param_list
   96                | param_list ',' ELLIPSIS

   97 param_list: param_decl
   98           | param_list ',' param_decl

   99 param_decl: decl_spec declarator
  100           | decl_spec
  101           | decl_spec abstract_decl

  102 enum_type_spec: enum_type_def
  103               | enum_type_ref

  104 enum_type_def: ENUM '{' enum_def_list '}'
  105              | ENUM IDENT '{' enum_def_list '}'
  106              | ENUM '{' enum_def_list ',' '}'
  107              | ENUM IDENT '{' enum_def_list ',' '}'

  108 enum_type_ref: ENUM IDENT

  109 enum_def_list: enum_constant_def
  110              | enum_def_list ',' enum_constant_def

  111 enum_constant_def: IDENT
  112                  | IDENT '=' expr

  113 forward_decl: STRUCT IDENT ';'

  114 struct_type_spec: struct_type_def struct_block
  115                 | struct_type_ref

  116 struct_type_def: STRUCT '{'
  117                | STRUCT IDENT '{'

  118 struct_block: field_list '}'

  119 struct_type_ref: STRUCT IDENT

  120 field_list: component_decl
  121           | field_list component_decl

  122 component_decl: component_decl_spec component_decl_list ';'

  123 component_decl_spec: type_spec
  124                    | struct_spec

  125 component_decl_list: component_declarator
  126                    | component_decl_list ',' component_declarator

  127 component_declarator: declarator
  128                     | bit_field

  129 bit_field: ':' NUMBER
  130          | declarator ':' NUMBER

  131 union_type_spec: union_type_def struct_block
  132                | union_type_ref

  133 union_type_def: UNION '{'
  134               | UNION IDENT '{'

  135 union_type_ref: UNION IDENT

  136 direct_abstract_decl: '(' abstract_decl ')'
  137                     | direct_abstract_decl '[' NUMBER ']'
  138                     | direct_abstract_decl '[' expr ']'
  139                     | direct_abstract_decl '[' '*' ']'
  140                     | direct_abstract_decl '(' param_type_list ')'
  141                     | '[' NUMBER ']'
  142                     | '[' expr ']'
  143                     | '[' '*' ']'
  144                     | '(' param_type_list ')'
  145                     | '[' ']'
  146                     | '(' ')'

  147 stmt: expr ';'
  148     | label ':' stmt
  149     | compound_stmt
  150     | conditional_stmt
  151     | iterative_stmt
  152     | SWITCH '(' expr ')' stmt
  153     | BREAK ';'
  154     | CONTINUE ';'
  155     | GOTO IDENT ';'
  156     | return_stmt
  157     | null_stmt

  158 @1: %empty

  159 conditional_stmt: IF '(' expr ')' @1 conditional_body

  160 conditional_body: stmt
  161                 | stmt ELSE stmt

  162 @2: %empty

  163 iterative_stmt: DO @2 stmt WHILE '(' expr ')' ';'

  164 @3: %empty

  165 iterative_stmt: WHILE '(' expr ')' @3 stmt
  166               | FOR for_expr stmt

  167 label: IDENT
  168      | CASE const_expr
  169      | DEFAULT

  170 const_expr: NUMBER
  171           | CHARLIT

  172 for_expr: '(' ';' ';' ';' ')'
  173         | '(' expr ';' ';' ')'
  174         | '(' ';' expr ';' ')'
  175         | '(' ';' ';' expr ')'
  176         | '(' expr ';' expr ';' ')'
  177         | '(' expr ';' ';' expr ')'
  178         | '(' ';' expr ';' expr ')'
  179         | '(' expr ';' expr ';' expr ')'

  180 $@4: %empty

  181 compound_stmt: '{' $@4 decl_or_stmt_list '}'
  182              | '{' '}'

  183 return_stmt: RETURN expr ';'
  184            | RETURN ';'

  185 null_stmt: ';'

  186 primary_expr: IDENT
  187             | NUMBER
  188             | '(' expr ')'

  189 postfix_expr: primary_expr
  190             | subscript_expr
  191             | comp_selec_expr
  192             | function_call
  193             | postinc_expr
  194             | postdec_expr

  195 subscript_expr: postfix_expr '[' expr ']'

  196 function_call: postfix_expr '(' expr_list ')'
  197              | postfix_expr '(' ')'

  198 expr_list: assignment_expr
  199          | expr_list ',' assignment_expr

  200 comp_selec_expr: postfix_expr '.' IDENT
  201                | postfix_expr INDSEL IDENT

  202 postinc_expr: postfix_expr PLUSPLUS

  203 postdec_expr: postfix_expr MINUSMINUS

  204 cast_expr: unary_expr
  205          | '(' type_spec ')' cast_expr
  206          | '(' struct_spec ')' cast_expr

  207 unary_expr: postfix_expr
  208           | SIZEOF '(' type_spec ')'
  209           | SIZEOF unary_expr
  210           | '-' cast_expr
  211           | '+' cast_expr
  212           | '!' cast_expr
  213           | '~' cast_expr
  214           | '&' cast_expr
  215           | '*' cast_expr
  216           | PLUSPLUS unary_expr
  217           | MINUSMINUS unary_expr

  218 multiplicative_expr: cast_expr
  219                    | multiplicative_expr '*' cast_expr
  220                    | multiplicative_expr '/' cast_expr
  221                    | multiplicative_expr '%' cast_expr

  222 additive_expr: multiplicative_expr
  223              | additive_expr '+' multiplicative_expr
  224              | additive_expr '-' multiplicative_expr

  225 shift_expr: additive_expr
  226           | shift_expr SHL additive_expr
  227           | shift_expr SHR additive_expr

  228 relational_expr: shift_expr
  229                | relational_expr '<' shift_expr
  230                | relational_expr '>' shift_expr
  231                | relational_expr LTEQ shift_expr
  232                | relational_expr GTEQ shift_expr

  233 equality_expr: relational_expr
  234              | equality_expr EQEQ relational_expr
  235              | equality_expr NOTEQ relational_expr

  236 bitwise_or_expr: bitwise_xor_expr
  237                | bitwise_or_expr '|' bitwise_xor_expr

  238 bitwise_xor_expr: bitwise_and_expr
  239                 | bitwise_xor_expr '^' bitwise_and_expr

  240 bitwise_and_expr: equality_expr
  241                 | bitwise_and_expr '&' equality_expr

  242 logical_or_expr: logical_and_expr
  243                | logical_or_expr LOGOR logical_and_expr

  244 logical_and_expr: bitwise_or_expr
  245                 | logical_and_expr LOGAND bitwise_or_expr

  246 conditional_expr: logical_or_expr
  247                 | logical_or_expr '?' expr ':' conditional_expr

  248 assignment_expr: conditional_expr
  249                | unary_expr '=' assignment_expr
  250                | unary_expr PLUSEQ assignment_expr
  251                | unary_expr MINUSEQ assignment_expr
  252                | unary_expr TIMESEQ assignment_expr
  253                | unary_expr DIVEQ assignment_expr
  254                | unary_expr MODEQ assignment_expr
  255                | unary_expr SHLEQ assignment_expr
  256                | unary_expr SHREQ assignment_expr
  257                | unary_expr ANDEQ assignment_expr
  258                | unary_expr OREQ assignment_expr
  259                | unary_expr XOREQ assignment_expr

  260 comma_expr: assignment_expr
  261           | comma_expr ',' assignment_expr

  262 expr: comma_expr

  263 ident_list: IDENT
  264           | ident_list ',' IDENT


Terminals, with rules where they appear

$end (0) 0
'!' (33) 212
'%' (37) 221
'&' (38) 214 241
'(' (40) 80 92 93 94 136 140 144 146 152 159 163 165 172 173 174 175
    176 177 178 179 188 196 197 205 206 208
')' (41) 80 92 93 94 136 140 144 146 152 159 163 165 172 173 174 175
    176 177 178 179 188 196 197 205 206 208
'*' (42) 85 86 139 143 215 219
'+' (43) 211 223
',' (44) 25 96 98 106 107 110 126 199 261 264
'-' (45) 210 224
'.' (46) 200
'/' (47) 220
':' (58) 129 130 148 247
';' (59) 11 13 113 122 147 153 154 155 163 172 173 174 175 176 177
    178 179 183 184 185
'<' (60) 229
'=' (61) 112 249
'>' (62) 230
'?' (63) 247
'[' (91) 90 91 137 138 139 141 142 143 145 195
']' (93) 90 91 137 138 139 141 142 143 145 195
'^' (94) 239
'{' (123) 104 105 106 107 116 117 133 134 181 182
'|' (124) 237
'}' (125) 104 105 106 107 118 181 182
'~' (126) 213
error (256)
NUMBER (258) 91 129 130 137 141 170 187
IDENT (259) 83 105 107 108 111 112 113 117 119 134 135 155 167 186
    200 201 263 264
STRING (260)
CHARLIT (261) 171
BREAK (262) 153
CASE (263) 168
CONTINUE (264) 154
DEFAULT (265) 169
DO (266) 163
ELSE (267) 161
ENUM (268) 104 105 106 107 108
FOR (269) 166
GOTO (270) 155
IF (271) 159
RETURN (272) 183 184
SWITCH (273) 152
TYPEDEF (274)
WHILE (275) 163 165
INDSEL (276) 201
PLUSPLUS (277) 202 216
MINUSMINUS (278) 203 217
SIZEOF (279) 208 209
SHL (280) 226
SHR (281) 227
GTEQ (282) 232
LTEQ (283) 231
EQEQ (284) 234
NOTEQ (285) 235
LOGAND (286) 245
LOGOR (287) 243
INDIRECTION (288)
ADDRESS (289)
PLUSEQ (290) 250
MINUSEQ (291) 251
TIMESEQ (292) 252
DIVEQ (293) 253
MODEQ (294) 254
SHLEQ (295) 255
SHREQ (296) 256
ANDEQ (297) 257
OREQ (298) 258
XOREQ (299) 259
AUTO (300) 26
EXTERN (301) 27
REGISTER (302) 28
STATIC (303) 29
CONST (304) 74
RESTRICT (305) 76
VOLATILE (306) 75
CHAR (307) 60 61 62
INT (308) 32 34 35 36 39 41 43 45 53 54 55 56 57 58 59
DOUBLE (309) 65 66 68 69
FLOAT (310) 64 67
LONG (311) 38 39 40 41 42 43 44 45 49 50 51 52 56 57 58 59 66 69
_BOOL (312) 63
UNION (313) 133 134 135
STRUCT (314) 113 116 117 119
_COMPLEX (315) 67 68 69
SHORT (316) 31 32 33 34 46 47 53 54
ENUMBER (317)
INLINE (318) 30
SIGNED (319) 33 34 36 37 40 41 44 45 61
UNSIGNED (320) 46 47 48 49 50 51 52 53 54 55 56 57 58 59 62
VOID (321) 70
_IMAGINARY (322)
ELLIPSIS (323) 96
UPLUS (324)
UMINUS (325)
PREFIX_PLUSPLUS (326)
PREFIX_MINUSMINUS (327)
POSTFIX_PLUSPLUS (328)
POSTFIX_MINUSMINUS (329)


Nonterminals, with rules where they appear

$accept (99)
    on left: 0
start (100)
    on left: 1 2, on right: 0 2
top_level_decl (101)
    on left: 3 4, on right: 2
func_def (102)
    on left: 5, on right: 4
full_func_decl (103)
    on left: 6, on right: 5
decl_or_stmt_list (104)
    on left: 7 8, on right: 8 181
decl_or_stmt (105)
    on left: 9 10, on right: 7 8
decl (106)
    on left: 11 12 13, on right: 3 9
decl_spec (107)
    on left: 14 15 16 17 18 19 20 21 22 23, on right: 6 11 19 20 21
    22 23 99 100 101
init_decl_list (108)
    on left: 24 25, on right: 11 25
stg_spec (109)
    on left: 26 27 28 29, on right: 14 21
func_spec (110)
    on left: 30, on right: 18 23
type_spec (111)
    on left: 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48
    49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69
    70, on right: 15 19 123 205 208
struct_spec (112)
    on left: 71 72 73, on right: 13 16 20 124 206
type_qual (113)
    on left: 74 75 76, on right: 17 22
declarator (114)
    on left: 77 78, on right: 24 25 80 99 127 130
direct_decl (115)
    on left: 79 80 81 82, on right: 78 84 90 91 92 93 94
simple_decl (116)
    on left: 83, on right: 79
pointer_decl (117)
    on left: 84, on right: 77
pointer (118)
    on left: 85 86, on right: 84 86 87 89
abstract_decl (119)
    on left: 87 88 89, on right: 101 136
arr_decl (120)
    on left: 90 91, on right: 81
func_decl (121)
    on left: 92 93 94, on right: 6 82
param_type_list (122)
    on left: 95 96, on right: 92 140 144
param_list (123)
    on left: 97 98, on right: 95 96 98
param_decl (124)
    on left: 99 100 101, on right: 97 98
enum_type_spec (125)
    on left: 102 103, on right: 71
enum_type_def (126)
    on left: 104 105 106 107, on right: 102
enum_type_ref (127)
    on left: 108, on right: 103
enum_def_list (128)
    on left: 109 110, on right: 104 105 106 107 110
enum_constant_def (129)
    on left: 111 112, on right: 109 110
forward_decl (130)
    on left: 113, on right: 12
struct_type_spec (131)
    on left: 114 115, on right: 72
struct_type_def (132)
    on left: 116 117, on right: 114
struct_block (133)
    on left: 118, on right: 114 131
struct_type_ref (134)
    on left: 119, on right: 115
field_list (135)
    on left: 120 121, on right: 118 121
component_decl (136)
    on left: 122, on right: 120 121
component_decl_spec (137)
    on left: 123 124, on right: 122
component_decl_list (138)
    on left: 125 126, on right: 122 126
component_declarator (139)
    on left: 127 128, on right: 125 126
bit_field (140)
    on left: 129 130, on right: 128
union_type_spec (141)
    on left: 131 132, on right: 73
union_type_def (142)
    on left: 133 134, on right: 131
union_type_ref (143)
    on left: 135, on right: 132
direct_abstract_decl (144)
    on left: 136 137 138 139 140 141 142 143 144 145 146, on right:
    88 89 137 138 139 140
stmt (145)
    on left: 147 148 149 150 151 152 153 154 155 156 157, on right:
    10 148 152 160 161 163 165 166
conditional_stmt (146)
    on left: 159, on right: 150
@1 (147)
    on left: 158, on right: 159
conditional_body (148)
    on left: 160 161, on right: 159
iterative_stmt (149)
    on left: 163 165 166, on right: 151
@2 (150)
    on left: 162, on right: 163
@3 (151)
    on left: 164, on right: 165
label (152)
    on left: 167 168 169, on right: 148
const_expr (153)
    on left: 170 171, on right: 168
for_expr (154)
    on left: 172 173 174 175 176 177 178 179, on right: 166
compound_stmt (155)
    on left: 181 182, on right: 5 149
$@4 (156)
    on left: 180, on right: 181
return_stmt (157)
    on left: 183 184, on right: 156
null_stmt (158)
    on left: 185, on right: 157
primary_expr (159)
    on left: 186 187 188, on right: 189
postfix_expr (160)
    on left: 189 190 191 192 193 194, on right: 195 196 197 200 201
    202 203 207
subscript_expr (161)
    on left: 195, on right: 190
function_call (162)
    on left: 196 197, on right: 192
expr_list (163)
    on left: 198 199, on right: 196 199
comp_selec_expr (164)
    on left: 200 201, on right: 191
postinc_expr (165)
    on left: 202, on right: 193
postdec_expr (166)
    on left: 203, on right: 194
cast_expr (167)
    on left: 204 205 206, on right: 205 206 210 211 212 213 214 215
    218 219 220 221
unary_expr (168)
    on left: 207 208 209 210 211 212 213 214 215 216 217, on right:
    204 209 216 217 249 250 251 252 253 254 255 256 257 258 259
multiplicative_expr (169)
    on left: 218 219 220 221, on right: 219 220 221 222 223 224
additive_expr (170)
    on left: 222 223 224, on right: 223 224 225 226 227
shift_expr (171)
    on left: 225 226 227, on right: 226 227 228 229 230 231 232
relational_expr (172)
    on left: 228 229 230 231 232, on right: 229 230 231 232 233 234
    235
equality_expr (173)
    on left: 233 234 235, on right: 234 235 240 241
bitwise_or_expr (174)
    on left: 236 237, on right: 237 244 245
bitwise_xor_expr (175)
    on left: 238 239, on right: 236 237 239
bitwise_and_expr (176)
    on left: 240 241, on right: 238 239 241
logical_or_expr (177)
    on left: 242 243, on right: 243 246 247
logical_and_expr (178)
    on left: 244 245, on right: 242 243 245
conditional_expr (179)
    on left: 246 247, on right: 247 248
assignment_expr (180)
    on left: 248 249 250 251 252 253 254 255 256 257 258 259, on right:
    198 199 249 250 251 252 253 254 255 256 257 258 259 260 261
comma_expr (181)
    on left: 260 261, on right: 261 262
expr (182)
    on left: 262, on right: 112 138 142 147 152 159 163 165 173 174
    175 176 177 178 179 183 188 195 247
ident_list (183)
    on left: 263 264, on right: 94 264


State 0

    0 $accept: . start $end

    $default  reduce using rule 1 (start)

    start  go to state 1


State 1

    0 $accept: start . $end
    2 start: start . top_level_decl

    $end      shift, and go to state 2
    ENUM      shift, and go to state 3
    AUTO      shift, and go to state 4
    EXTERN    shift, and go to state 5
    REGISTER  shift, and go to state 6
    STATIC    shift, and go to state 7
    CONST     shift, and go to state 8
    RESTRICT  shift, and go to state 9
    VOLATILE  shift, and go to state 10
    CHAR      shift, and go to state 11
    INT       shift, and go to state 12
    DOUBLE    shift, and go to state 13
    FLOAT     shift, and go to state 14
    LONG      shift, and go to state 15
    _BOOL     shift, and go to state 16
    UNION     shift, and go to state 17
    STRUCT    shift, and go to state 18
    SHORT     shift, and go to state 19
    INLINE    shift, and go to state 20
    SIGNED    shift, and go to state 21
    UNSIGNED  shift, and go to state 22
    VOID      shift, and go to state 23

    top_level_decl    go to state 24
    func_def          go to state 25
    full_func_decl    go to state 26
    decl              go to state 27
    decl_spec         go to state 28
    stg_spec          go to state 29
    func_spec         go to state 30
    type_spec         go to state 31
    struct_spec       go to state 32
    type_qual         go to state 33
    enum_type_spec    go to state 34
    enum_type_def     go to state 35
    enum_type_ref     go to state 36
    forward_decl      go to state 37
    struct_type_spec  go to state 38
    struct_type_def   go to state 39
    struct_type_ref   go to state 40
    union_type_spec   go to state 41
    union_type_def    go to state 42
    union_type_ref    go to state 43


State 2

    0 $accept: start $end .

    $default  accept


State 3

  104 enum_type_def: ENUM . '{' enum_def_list '}'
  105              | ENUM . IDENT '{' enum_def_list '}'
  106              | ENUM . '{' enum_def_list ',' '}'
  107              | ENUM . IDENT '{' enum_def_list ',' '}'
  108 enum_type_ref: ENUM . IDENT

    IDENT  shift, and go to state 44
    '{'    shift, and go to state 45


State 4

   26 stg_spec: AUTO .

    $default  reduce using rule 26 (stg_spec)


State 5

   27 stg_spec: EXTERN .

    $default  reduce using rule 27 (stg_spec)


State 6

   28 stg_spec: REGISTER .

    $default  reduce using rule 28 (stg_spec)


State 7

   29 stg_spec: STATIC .

    $default  reduce using rule 29 (stg_spec)


State 8

   74 type_qual: CONST .

    $default  reduce using rule 74 (type_qual)


State 9

   76 type_qual: RESTRICT .

    $default  reduce using rule 76 (type_qual)


State 10

   75 type_qual: VOLATILE .

    $default  reduce using rule 75 (type_qual)


State 11

   60 type_spec: CHAR .

    $default  reduce using rule 60 (type_spec)


State 12

   35 type_spec: INT .

    $default  reduce using rule 35 (type_spec)


State 13

   65 type_spec: DOUBLE .
   68          | DOUBLE . _COMPLEX

    _COMPLEX  shift, and go to state 46

    $default  reduce using rule 65 (type_spec)


State 14

   64 type_spec: FLOAT .
   67          | FLOAT . _COMPLEX

    _COMPLEX  shift, and go to state 47

    $default  reduce using rule 64 (type_spec)


State 15

   38 type_spec: LONG .
   39          | LONG . INT
   42          | LONG . LONG
   43          | LONG . LONG INT
   50          | LONG . UNSIGNED
   52          | LONG . LONG UNSIGNED
   57          | LONG . UNSIGNED INT
   59          | LONG . LONG UNSIGNED INT
   66          | LONG . DOUBLE
   69          | LONG . DOUBLE _COMPLEX

    INT       shift, and go to state 48
    DOUBLE    shift, and go to state 49
    LONG      shift, and go to state 50
    UNSIGNED  shift, and go to state 51

    INT       [reduce using rule 38 (type_spec)]
    DOUBLE    [reduce using rule 38 (type_spec)]
    LONG      [reduce using rule 38 (type_spec)]
    UNSIGNED  [reduce using rule 38 (type_spec)]
    $default  reduce using rule 38 (type_spec)


State 16

   63 type_spec: _BOOL .

    $default  reduce using rule 63 (type_spec)


State 17

  133 union_type_def: UNION . '{'
  134               | UNION . IDENT '{'
  135 union_type_ref: UNION . IDENT

    IDENT  shift, and go to state 52
    '{'    shift, and go to state 53


State 18

  113 forward_decl: STRUCT . IDENT ';'
  116 struct_type_def: STRUCT . '{'
  117                | STRUCT . IDENT '{'
  119 struct_type_ref: STRUCT . IDENT

    IDENT  shift, and go to state 54
    '{'    shift, and go to state 55


State 19

   31 type_spec: SHORT .
   32          | SHORT . INT
   47          | SHORT . UNSIGNED
   54          | SHORT . UNSIGNED INT

    INT       shift, and go to state 56
    UNSIGNED  shift, and go to state 57

    INT       [reduce using rule 31 (type_spec)]
    UNSIGNED  [reduce using rule 31 (type_spec)]
    $default  reduce using rule 31 (type_spec)


State 20

   30 func_spec: INLINE .

    $default  reduce using rule 30 (func_spec)


State 21

   33 type_spec: SIGNED . SHORT
   34          | SIGNED . SHORT INT
   36          | SIGNED . INT
   37          | SIGNED .
   40          | SIGNED . LONG
   41          | SIGNED . LONG INT
   44          | SIGNED . LONG LONG
   45          | SIGNED . LONG LONG INT
   61          | SIGNED . CHAR

    CHAR   shift, and go to state 58
    INT    shift, and go to state 59
    LONG   shift, and go to state 60
    SHORT  shift, and go to state 61

    CHAR      [reduce using rule 37 (type_spec)]
    INT       [reduce using rule 37 (type_spec)]
    LONG      [reduce using rule 37 (type_spec)]
    SHORT     [reduce using rule 37 (type_spec)]
    $default  reduce using rule 37 (type_spec)


State 22

   46 type_spec: UNSIGNED . SHORT
   48          | UNSIGNED .
   49          | UNSIGNED . LONG
   51          | UNSIGNED . LONG LONG
   53          | UNSIGNED . SHORT INT
   55          | UNSIGNED . INT
   56          | UNSIGNED . LONG INT
   58          | UNSIGNED . LONG LONG INT
   62          | UNSIGNED . CHAR

    CHAR   shift, and go to state 62
    INT    shift, and go to state 63
    LONG   shift, and go to state 64
    SHORT  shift, and go to state 65

    CHAR      [reduce using rule 48 (type_spec)]
    INT       [reduce using rule 48 (type_spec)]
    LONG      [reduce using rule 48 (type_spec)]
    SHORT     [reduce using rule 48 (type_spec)]
    $default  reduce using rule 48 (type_spec)


State 23

   70 type_spec: VOID .

    $default  reduce using rule 70 (type_spec)


State 24

    2 start: start top_level_decl .

    $default  reduce using rule 2 (start)


State 25

    4 top_level_decl: func_def .

    $default  reduce using rule 4 (top_level_decl)


State 26

    5 func_def: full_func_decl . compound_stmt

    '{'  shift, and go to state 66

    compound_stmt  go to state 67


State 27

    3 top_level_decl: decl .

    $default  reduce using rule 3 (top_level_decl)


State 28

    6 full_func_decl: decl_spec . func_decl
   11 decl: decl_spec . init_decl_list ';'
   19 decl_spec: decl_spec . type_spec
   20          | decl_spec . struct_spec
   21          | decl_spec . stg_spec
   22          | decl_spec . type_qual
   23          | decl_spec . func_spec

    IDENT     shift, and go to state 68
    ENUM      shift, and go to state 3
    AUTO      shift, and go to state 4
    EXTERN    shift, and go to state 5
    REGISTER  shift, and go to state 6
    STATIC    shift, and go to state 7
    CONST     shift, and go to state 8
    RESTRICT  shift, and go to state 9
    VOLATILE  shift, and go to state 10
    CHAR      shift, and go to state 11
    INT       shift, and go to state 12
    DOUBLE    shift, and go to state 13
    FLOAT     shift, and go to state 14
    LONG      shift, and go to state 15
    _BOOL     shift, and go to state 16
    UNION     shift, and go to state 17
    STRUCT    shift, and go to state 69
    SHORT     shift, and go to state 19
    INLINE    shift, and go to state 20
    SIGNED    shift, and go to state 21
    UNSIGNED  shift, and go to state 22
    VOID      shift, and go to state 23
    '*'       shift, and go to state 70
    '('       shift, and go to state 71

    init_decl_list    go to state 72
    stg_spec          go to state 73
    func_spec         go to state 74
    type_spec         go to state 75
    struct_spec       go to state 76
    type_qual         go to state 77
    declarator        go to state 78
    direct_decl       go to state 79
    simple_decl       go to state 80
    pointer_decl      go to state 81
    pointer           go to state 82
    arr_decl          go to state 83
    func_decl         go to state 84
    enum_type_spec    go to state 34
    enum_type_def     go to state 35
    enum_type_ref     go to state 36
    struct_type_spec  go to state 38
    struct_type_def   go to state 39
    struct_type_ref   go to state 40
    union_type_spec   go to state 41
    union_type_def    go to state 42
    union_type_ref    go to state 43


State 29

   14 decl_spec: stg_spec .

    $default  reduce using rule 14 (decl_spec)


State 30

   18 decl_spec: func_spec .

    $default  reduce using rule 18 (decl_spec)


State 31

   15 decl_spec: type_spec .

    $default  reduce using rule 15 (decl_spec)


State 32

   13 decl: struct_spec . ';'
   16 decl_spec: struct_spec .

    ';'  shift, and go to state 85

    $default  reduce using rule 16 (decl_spec)


State 33

   17 decl_spec: type_qual .

    $default  reduce using rule 17 (decl_spec)


State 34

   71 struct_spec: enum_type_spec .

    $default  reduce using rule 71 (struct_spec)


State 35

  102 enum_type_spec: enum_type_def .

    $default  reduce using rule 102 (enum_type_spec)


State 36

  103 enum_type_spec: enum_type_ref .

    $default  reduce using rule 103 (enum_type_spec)


State 37

   12 decl: forward_decl .

    $default  reduce using rule 12 (decl)


State 38

   72 struct_spec: struct_type_spec .

    $default  reduce using rule 72 (struct_spec)


State 39

  114 struct_type_spec: struct_type_def . struct_block

    ENUM      shift, and go to state 3
    CHAR      shift, and go to state 11
    INT       shift, and go to state 12
    DOUBLE    shift, and go to state 13
    FLOAT     shift, and go to state 14
    LONG      shift, and go to state 15
    _BOOL     shift, and go to state 16
    UNION     shift, and go to state 17
    STRUCT    shift, and go to state 69
    SHORT     shift, and go to state 19
    SIGNED    shift, and go to state 21
    UNSIGNED  shift, and go to state 22
    VOID      shift, and go to state 23

    type_spec            go to state 86
    struct_spec          go to state 87
    enum_type_spec       go to state 34
    enum_type_def        go to state 35
    enum_type_ref        go to state 36
    struct_type_spec     go to state 38
    struct_type_def      go to state 39
    struct_block         go to state 88
    struct_type_ref      go to state 40
    field_list           go to state 89
    component_decl       go to state 90
    component_decl_spec  go to state 91
    union_type_spec      go to state 41
    union_type_def       go to state 42
    union_type_ref       go to state 43


State 40

  115 struct_type_spec: struct_type_ref .

    $default  reduce using rule 115 (struct_type_spec)


State 41

   73 struct_spec: union_type_spec .

    $default  reduce using rule 73 (struct_spec)


State 42

  131 union_type_spec: union_type_def . struct_block

    ENUM      shift, and go to state 3
    CHAR      shift, and go to state 11
    INT       shift, and go to state 12
    DOUBLE    shift, and go to state 13
    FLOAT     shift, and go to state 14
    LONG      shift, and go to state 15
    _BOOL     shift, and go to state 16
    UNION     shift, and go to state 17
    STRUCT    shift, and go to state 69
    SHORT     shift, and go to state 19
    SIGNED    shift, and go to state 21
    UNSIGNED  shift, and go to state 22
    VOID      shift, and go to state 23

    type_spec            go to state 86
    struct_spec          go to state 87
    enum_type_spec       go to state 34
    enum_type_def        go to state 35
    enum_type_ref        go to state 36
    struct_type_spec     go to state 38
    struct_type_def      go to state 39
    struct_block         go to state 92
    struct_type_ref      go to state 40
    field_list           go to state 89
    component_decl       go to state 90
    component_decl_spec  go to state 91
    union_type_spec      go to state 41
    union_type_def       go to state 42
    union_type_ref       go to state 43


State 43

  132 union_type_spec: union_type_ref .

    $default  reduce using rule 132 (union_type_spec)


State 44

  105 enum_type_def: ENUM IDENT . '{' enum_def_list '}'
  107              | ENUM IDENT . '{' enum_def_list ',' '}'
  108 enum_type_ref: ENUM IDENT .

    '{'  shift, and go to state 93

    $default  reduce using rule 108 (enum_type_ref)


State 45

  104 enum_type_def: ENUM '{' . enum_def_list '}'
  106              | ENUM '{' . enum_def_list ',' '}'

    IDENT  shift, and go to state 94

    enum_def_list      go to state 95
    enum_constant_def  go to state 96


State 46

   68 type_spec: DOUBLE _COMPLEX .

    $default  reduce using rule 68 (type_spec)


State 47

   67 type_spec: FLOAT _COMPLEX .

    $default  reduce using rule 67 (type_spec)


State 48

   39 type_spec: LONG INT .

    $default  reduce using rule 39 (type_spec)


State 49

   66 type_spec: LONG DOUBLE .
   69          | LONG DOUBLE . _COMPLEX

    _COMPLEX  shift, and go to state 97

    $default  reduce using rule 66 (type_spec)


State 50

   42 type_spec: LONG LONG .
   43          | LONG LONG . INT
   52          | LONG LONG . UNSIGNED
   59          | LONG LONG . UNSIGNED INT

    INT       shift, and go to state 98
    UNSIGNED  shift, and go to state 99

    INT       [reduce using rule 42 (type_spec)]
    UNSIGNED  [reduce using rule 42 (type_spec)]
    $default  reduce using rule 42 (type_spec)


State 51

   50 type_spec: LONG UNSIGNED .
   57          | LONG UNSIGNED . INT

    INT  shift, and go to state 100

    INT       [reduce using rule 50 (type_spec)]
    $default  reduce using rule 50 (type_spec)


State 52

  134 union_type_def: UNION IDENT . '{'
  135 union_type_ref: UNION IDENT .

    '{'  shift, and go to state 101

    $default  reduce using rule 135 (union_type_ref)


State 53

  133 union_type_def: UNION '{' .

    $default  reduce using rule 133 (union_type_def)


State 54

  113 forward_decl: STRUCT IDENT . ';'
  117 struct_type_def: STRUCT IDENT . '{'
  119 struct_type_ref: STRUCT IDENT .

    ';'  shift, and go to state 102
    '{'  shift, and go to state 103

    ';'       [reduce using rule 119 (struct_type_ref)]
    $default  reduce using rule 119 (struct_type_ref)


State 55

  116 struct_type_def: STRUCT '{' .

    $default  reduce using rule 116 (struct_type_def)


State 56

   32 type_spec: SHORT INT .

    $default  reduce using rule 32 (type_spec)


State 57

   47 type_spec: SHORT UNSIGNED .
   54          | SHORT UNSIGNED . INT

    INT  shift, and go to state 104

    INT       [reduce using rule 47 (type_spec)]
    $default  reduce using rule 47 (type_spec)


State 58

   61 type_spec: SIGNED CHAR .

    $default  reduce using rule 61 (type_spec)


State 59

   36 type_spec: SIGNED INT .

    $default  reduce using rule 36 (type_spec)


State 60

   40 type_spec: SIGNED LONG .
   41          | SIGNED LONG . INT
   44          | SIGNED LONG . LONG
   45          | SIGNED LONG . LONG INT

    INT   shift, and go to state 105
    LONG  shift, and go to state 106

    INT       [reduce using rule 40 (type_spec)]
    LONG      [reduce using rule 40 (type_spec)]
    $default  reduce using rule 40 (type_spec)


State 61

   33 type_spec: SIGNED SHORT .
   34          | SIGNED SHORT . INT

    INT  shift, and go to state 107

    INT       [reduce using rule 33 (type_spec)]
    $default  reduce using rule 33 (type_spec)


State 62

   62 type_spec: UNSIGNED CHAR .

    $default  reduce using rule 62 (type_spec)


State 63

   55 type_spec: UNSIGNED INT .

    $default  reduce using rule 55 (type_spec)


State 64

   49 type_spec: UNSIGNED LONG .
   51          | UNSIGNED LONG . LONG
   56          | UNSIGNED LONG . INT
   58          | UNSIGNED LONG . LONG INT

    INT   shift, and go to state 108
    LONG  shift, and go to state 109

    INT       [reduce using rule 49 (type_spec)]
    LONG      [reduce using rule 49 (type_spec)]
    $default  reduce using rule 49 (type_spec)


State 65

   46 type_spec: UNSIGNED SHORT .
   53          | UNSIGNED SHORT . INT

    INT  shift, and go to state 110

    INT       [reduce using rule 46 (type_spec)]
    $default  reduce using rule 46 (type_spec)


State 66

  181 compound_stmt: '{' . $@4 decl_or_stmt_list '}'
  182              | '{' . '}'

    '}'  shift, and go to state 111

    $default  reduce using rule 180 ($@4)

    $@4  go to state 112


State 67

    5 func_def: full_func_decl compound_stmt .

    $default  reduce using rule 5 (func_def)


State 68

   83 simple_decl: IDENT .

    $default  reduce using rule 83 (simple_decl)


State 69

  116 struct_type_def: STRUCT . '{'
  117                | STRUCT . IDENT '{'
  119 struct_type_ref: STRUCT . IDENT

    IDENT  shift, and go to state 113
    '{'    shift, and go to state 55


State 70

   85 pointer: '*' .
   86        | '*' . pointer

    '*'  shift, and go to state 70

    $default  reduce using rule 85 (pointer)

    pointer  go to state 114


State 71

   80 direct_decl: '(' . declarator ')'

    IDENT  shift, and go to state 68
    '*'    shift, and go to state 70
    '('    shift, and go to state 71

    declarator    go to state 115
    direct_decl   go to state 79
    simple_decl   go to state 80
    pointer_decl  go to state 81
    pointer       go to state 82
    arr_decl      go to state 83
    func_decl     go to state 116


State 72

   11 decl: decl_spec init_decl_list . ';'
   25 init_decl_list: init_decl_list . ',' declarator

    ','  shift, and go to state 117
    ';'  shift, and go to state 118


State 73

   21 decl_spec: decl_spec stg_spec .

    $default  reduce using rule 21 (decl_spec)


State 74

   23 decl_spec: decl_spec func_spec .

    $default  reduce using rule 23 (decl_spec)


State 75

   19 decl_spec: decl_spec type_spec .

    $default  reduce using rule 19 (decl_spec)


State 76

   20 decl_spec: decl_spec struct_spec .

    $default  reduce using rule 20 (decl_spec)


State 77

   22 decl_spec: decl_spec type_qual .

    $default  reduce using rule 22 (decl_spec)


State 78

   24 init_decl_list: declarator .

    $default  reduce using rule 24 (init_decl_list)


State 79

   78 declarator: direct_decl .
   90 arr_decl: direct_decl . '[' ']'
   91         | direct_decl . '[' NUMBER ']'
   92 func_decl: direct_decl . '(' param_type_list ')'
   93          | direct_decl . '(' ')'
   94          | direct_decl . '(' ident_list ')'

    '('  shift, and go to state 119
    '['  shift, and go to state 120

    $default  reduce using rule 78 (declarator)


State 80

   79 direct_decl: simple_decl .

    $default  reduce using rule 79 (direct_decl)


State 81

   77 declarator: pointer_decl .

    $default  reduce using rule 77 (declarator)


State 82

   84 pointer_decl: pointer . direct_decl

    IDENT  shift, and go to state 68
    '('    shift, and go to state 71

    direct_decl  go to state 121
    simple_decl  go to state 80
    arr_decl     go to state 83
    func_decl    go to state 116


State 83

   81 direct_decl: arr_decl .

    $default  reduce using rule 81 (direct_decl)


State 84

    6 full_func_decl: decl_spec func_decl .
   82 direct_decl: func_decl .

    '{'       reduce using rule 6 (full_func_decl)
    $default  reduce using rule 82 (direct_decl)


State 85

   13 decl: struct_spec ';' .

    $default  reduce using rule 13 (decl)


State 86

  123 component_decl_spec: type_spec .

    $default  reduce using rule 123 (component_decl_spec)


State 87

  124 component_decl_spec: struct_spec .

    $default  reduce using rule 124 (component_decl_spec)


State 88

  114 struct_type_spec: struct_type_def struct_block .

    $default  reduce using rule 114 (struct_type_spec)


State 89

  118 struct_block: field_list . '}'
  121 field_list: field_list . component_decl

    ENUM      shift, and go to state 3
    CHAR      shift, and go to state 11
    INT       shift, and go to state 12
    DOUBLE    shift, and go to state 13
    FLOAT     shift, and go to state 14
    LONG      shift, and go to state 15
    _BOOL     shift, and go to state 16
    UNION     shift, and go to state 17
    STRUCT    shift, and go to state 69
    SHORT     shift, and go to state 19
    SIGNED    shift, and go to state 21
    UNSIGNED  shift, and go to state 22
    VOID      shift, and go to state 23
    '}'       shift, and go to state 122

    type_spec            go to state 86
    struct_spec          go to state 87
    enum_type_spec       go to state 34
    enum_type_def        go to state 35
    enum_type_ref        go to state 36
    struct_type_spec     go to state 38
    struct_type_def      go to state 39
    struct_type_ref      go to state 40
    component_decl       go to state 123
    component_decl_spec  go to state 91
    union_type_spec      go to state 41
    union_type_def       go to state 42
    union_type_ref       go to state 43


State 90

  120 field_list: component_decl .

    $default  reduce using rule 120 (field_list)


State 91

  122 component_decl: component_decl_spec . component_decl_list ';'

    IDENT  shift, and go to state 68
    ':'    shift, and go to state 124
    '*'    shift, and go to state 70
    '('    shift, and go to state 71

    declarator            go to state 125
    direct_decl           go to state 79
    simple_decl           go to state 80
    pointer_decl          go to state 81
    pointer               go to state 82
    arr_decl              go to state 83
    func_decl             go to state 116
    component_decl_list   go to state 126
    component_declarator  go to state 127
    bit_field             go to state 128


State 92

  131 union_type_spec: union_type_def struct_block .

    $default  reduce using rule 131 (union_type_spec)


State 93

  105 enum_type_def: ENUM IDENT '{' . enum_def_list '}'
  107              | ENUM IDENT '{' . enum_def_list ',' '}'

    IDENT  shift, and go to state 94

    enum_def_list      go to state 129
    enum_constant_def  go to state 96


State 94

  111 enum_constant_def: IDENT .
  112                  | IDENT . '=' expr

    '='  shift, and go to state 130

    $default  reduce using rule 111 (enum_constant_def)


State 95

  104 enum_type_def: ENUM '{' enum_def_list . '}'
  106              | ENUM '{' enum_def_list . ',' '}'
  110 enum_def_list: enum_def_list . ',' enum_constant_def

    ','  shift, and go to state 131
    '}'  shift, and go to state 132


State 96

  109 enum_def_list: enum_constant_def .

    $default  reduce using rule 109 (enum_def_list)


State 97

   69 type_spec: LONG DOUBLE _COMPLEX .

    $default  reduce using rule 69 (type_spec)


State 98

   43 type_spec: LONG LONG INT .

    $default  reduce using rule 43 (type_spec)


State 99

   52 type_spec: LONG LONG UNSIGNED .
   59          | LONG LONG UNSIGNED . INT

    INT  shift, and go to state 133

    INT       [reduce using rule 52 (type_spec)]
    $default  reduce using rule 52 (type_spec)


State 100

   57 type_spec: LONG UNSIGNED INT .

    $default  reduce using rule 57 (type_spec)


State 101

  134 union_type_def: UNION IDENT '{' .

    $default  reduce using rule 134 (union_type_def)


State 102

  113 forward_decl: STRUCT IDENT ';' .

    $default  reduce using rule 113 (forward_decl)


State 103

  117 struct_type_def: STRUCT IDENT '{' .

    $default  reduce using rule 117 (struct_type_def)


State 104

   54 type_spec: SHORT UNSIGNED INT .

    $default  reduce using rule 54 (type_spec)


State 105

   41 type_spec: SIGNED LONG INT .

    $default  reduce using rule 41 (type_spec)


State 106

   44 type_spec: SIGNED LONG LONG .
   45          | SIGNED LONG LONG . INT

    INT  shift, and go to state 134

    INT       [reduce using rule 44 (type_spec)]
    $default  reduce using rule 44 (type_spec)


State 107

   34 type_spec: SIGNED SHORT INT .

    $default  reduce using rule 34 (type_spec)


State 108

   56 type_spec: UNSIGNED LONG INT .

    $default  reduce using rule 56 (type_spec)


State 109

   51 type_spec: UNSIGNED LONG LONG .
   58          | UNSIGNED LONG LONG . INT

    INT  shift, and go to state 135

    INT       [reduce using rule 51 (type_spec)]
    $default  reduce using rule 51 (type_spec)


State 110

   53 type_spec: UNSIGNED SHORT INT .

    $default  reduce using rule 53 (type_spec)


State 111

  182 compound_stmt: '{' '}' .

    $default  reduce using rule 182 (compound_stmt)


State 112

  181 compound_stmt: '{' $@4 . decl_or_stmt_list '}'

    NUMBER      shift, and go to state 136
    IDENT       shift, and go to state 137
    BREAK       shift, and go to state 138
    CASE        shift, and go to state 139
    CONTINUE    shift, and go to state 140
    DEFAULT     shift, and go to state 141
    DO          shift, and go to state 142
    ENUM        shift, and go to state 3
    FOR         shift, and go to state 143
    GOTO        shift, and go to state 144
    IF          shift, and go to state 145
    RETURN      shift, and go to state 146
    SWITCH      shift, and go to state 147
    WHILE       shift, and go to state 148
    PLUSPLUS    shift, and go to state 149
    MINUSMINUS  shift, and go to state 150
    SIZEOF      shift, and go to state 151
    AUTO        shift, and go to state 4
    EXTERN      shift, and go to state 5
    REGISTER    shift, and go to state 6
    STATIC      shift, and go to state 7
    CONST       shift, and go to state 8
    RESTRICT    shift, and go to state 9
    VOLATILE    shift, and go to state 10
    CHAR        shift, and go to state 11
    INT         shift, and go to state 12
    DOUBLE      shift, and go to state 13
    FLOAT       shift, and go to state 14
    LONG        shift, and go to state 15
    _BOOL       shift, and go to state 16
    UNION       shift, and go to state 17
    STRUCT      shift, and go to state 18
    SHORT       shift, and go to state 19
    INLINE      shift, and go to state 20
    SIGNED      shift, and go to state 21
    UNSIGNED    shift, and go to state 22
    VOID        shift, and go to state 23
    '&'         shift, and go to state 152
    '+'         shift, and go to state 153
    '-'         shift, and go to state 154
    '*'         shift, and go to state 155
    '!'         shift, and go to state 156
    '~'         shift, and go to state 157
    ';'         shift, and go to state 158
    '('         shift, and go to state 159
    '{'         shift, and go to state 66

    decl_or_stmt_list    go to state 160
    decl_or_stmt         go to state 161
    decl                 go to state 162
    decl_spec            go to state 163
    stg_spec             go to state 29
    func_spec            go to state 30
    type_spec            go to state 31
    struct_spec          go to state 32
    type_qual            go to state 33
    enum_type_spec       go to state 34
    enum_type_def        go to state 35
    enum_type_ref        go to state 36
    forward_decl         go to state 37
    struct_type_spec     go to state 38
    struct_type_def      go to state 39
    struct_type_ref      go to state 40
    union_type_spec      go to state 41
    union_type_def       go to state 42
    union_type_ref       go to state 43
    stmt                 go to state 164
    conditional_stmt     go to state 165
    iterative_stmt       go to state 166
    label                go to state 167
    compound_stmt        go to state 168
    return_stmt          go to state 169
    null_stmt            go to state 170
    primary_expr         go to state 171
    postfix_expr         go to state 172
    subscript_expr       go to state 173
    function_call        go to state 174
    comp_selec_expr      go to state 175
    postinc_expr         go to state 176
    postdec_expr         go to state 177
    cast_expr            go to state 178
    unary_expr           go to state 179
    multiplicative_expr  go to state 180
    additive_expr        go to state 181
    shift_expr           go to state 182
    relational_expr      go to state 183
    equality_expr        go to state 184
    bitwise_or_expr      go to state 185
    bitwise_xor_expr     go to state 186
    bitwise_and_expr     go to state 187
    logical_or_expr      go to state 188
    logical_and_expr     go to state 189
    conditional_expr     go to state 190
    assignment_expr      go to state 191
    comma_expr           go to state 192
    expr                 go to state 193


State 113

  117 struct_type_def: STRUCT IDENT . '{'
  119 struct_type_ref: STRUCT IDENT .

    '{'  shift, and go to state 103

    $default  reduce using rule 119 (struct_type_ref)


State 114

   86 pointer: '*' pointer .

    $default  reduce using rule 86 (pointer)


State 115

   80 direct_decl: '(' declarator . ')'

    ')'  shift, and go to state 194


State 116

   82 direct_decl: func_decl .

    $default  reduce using rule 82 (direct_decl)


State 117

   25 init_decl_list: init_decl_list ',' . declarator

    IDENT  shift, and go to state 68
    '*'    shift, and go to state 70
    '('    shift, and go to state 71

    declarator    go to state 195
    direct_decl   go to state 79
    simple_decl   go to state 80
    pointer_decl  go to state 81
    pointer       go to state 82
    arr_decl      go to state 83
    func_decl     go to state 116


State 118

   11 decl: decl_spec init_decl_list ';' .

    $default  reduce using rule 11 (decl)


State 119

   92 func_decl: direct_decl '(' . param_type_list ')'
   93          | direct_decl '(' . ')'
   94          | direct_decl '(' . ident_list ')'

    IDENT     shift, and go to state 196
    ENUM      shift, and go to state 3
    AUTO      shift, and go to state 4
    EXTERN    shift, and go to state 5
    REGISTER  shift, and go to state 6
    STATIC    shift, and go to state 7
    CONST     shift, and go to state 8
    RESTRICT  shift, and go to state 9
    VOLATILE  shift, and go to state 10
    CHAR      shift, and go to state 11
    INT       shift, and go to state 12
    DOUBLE    shift, and go to state 13
    FLOAT     shift, and go to state 14
    LONG      shift, and go to state 15
    _BOOL     shift, and go to state 16
    UNION     shift, and go to state 17
    STRUCT    shift, and go to state 69
    SHORT     shift, and go to state 19
    INLINE    shift, and go to state 20
    SIGNED    shift, and go to state 21
    UNSIGNED  shift, and go to state 22
    VOID      shift, and go to state 23
    ')'       shift, and go to state 197

    decl_spec         go to state 198
    stg_spec          go to state 29
    func_spec         go to state 30
    type_spec         go to state 31
    struct_spec       go to state 199
    type_qual         go to state 33
    param_type_list   go to state 200
    param_list        go to state 201
    param_decl        go to state 202
    enum_type_spec    go to state 34
    enum_type_def     go to state 35
    enum_type_ref     go to state 36
    struct_type_spec  go to state 38
    struct_type_def   go to state 39
    struct_type_ref   go to state 40
    union_type_spec   go to state 41
    union_type_def    go to state 42
    union_type_ref    go to state 43
    ident_list        go to state 203


State 120

   90 arr_decl: direct_decl '[' . ']'
   91         | direct_decl '[' . NUMBER ']'

    NUMBER  shift, and go to state 204
    ']'     shift, and go to state 205


State 121

   84 pointer_decl: pointer direct_decl .
   90 arr_decl: direct_decl . '[' ']'
   91         | direct_decl . '[' NUMBER ']'
   92 func_decl: direct_decl . '(' param_type_list ')'
   93          | direct_decl . '(' ')'
   94          | direct_decl . '(' ident_list ')'

    '('  shift, and go to state 119
    '['  shift, and go to state 120

    $default  reduce using rule 84 (pointer_decl)


State 122

  118 struct_block: field_list '}' .

    $default  reduce using rule 118 (struct_block)


State 123

  121 field_list: field_list component_decl .

    $default  reduce using rule 121 (field_list)


State 124

  129 bit_field: ':' . NUMBER

    NUMBER  shift, and go to state 206


State 125

  127 component_declarator: declarator .
  130 bit_field: declarator . ':' NUMBER

    ':'  shift, and go to state 207

    $default  reduce using rule 127 (component_declarator)


State 126

  122 component_decl: component_decl_spec component_decl_list . ';'
  126 component_decl_list: component_decl_list . ',' component_declarator

    ','  shift, and go to state 208
    ';'  shift, and go to state 209


State 127

  125 component_decl_list: component_declarator .

    $default  reduce using rule 125 (component_decl_list)


State 128

  128 component_declarator: bit_field .

    $default  reduce using rule 128 (component_declarator)


State 129

  105 enum_type_def: ENUM IDENT '{' enum_def_list . '}'
  107              | ENUM IDENT '{' enum_def_list . ',' '}'
  110 enum_def_list: enum_def_list . ',' enum_constant_def

    ','  shift, and go to state 210
    '}'  shift, and go to state 211


State 130

  112 enum_constant_def: IDENT '=' . expr

    NUMBER      shift, and go to state 136
    IDENT       shift, and go to state 212
    PLUSPLUS    shift, and go to state 149
    MINUSMINUS  shift, and go to state 150
    SIZEOF      shift, and go to state 151
    '&'         shift, and go to state 152
    '+'         shift, and go to state 153
    '-'         shift, and go to state 154
    '*'         shift, and go to state 155
    '!'         shift, and go to state 156
    '~'         shift, and go to state 157
    '('         shift, and go to state 159

    primary_expr         go to state 171
    postfix_expr         go to state 172
    subscript_expr       go to state 173
    function_call        go to state 174
    comp_selec_expr      go to state 175
    postinc_expr         go to state 176
    postdec_expr         go to state 177
    cast_expr            go to state 178
    unary_expr           go to state 179
    multiplicative_expr  go to state 180
    additive_expr        go to state 181
    shift_expr           go to state 182
    relational_expr      go to state 183
    equality_expr        go to state 184
    bitwise_or_expr      go to state 185
    bitwise_xor_expr     go to state 186
    bitwise_and_expr     go to state 187
    logical_or_expr      go to state 188
    logical_and_expr     go to state 189
    conditional_expr     go to state 190
    assignment_expr      go to state 191
    comma_expr           go to state 192
    expr                 go to state 213


State 131

  106 enum_type_def: ENUM '{' enum_def_list ',' . '}'
  110 enum_def_list: enum_def_list ',' . enum_constant_def

    IDENT  shift, and go to state 94
    '}'    shift, and go to state 214

    enum_constant_def  go to state 215


State 132

  104 enum_type_def: ENUM '{' enum_def_list '}' .

    $default  reduce using rule 104 (enum_type_def)


State 133

   59 type_spec: LONG LONG UNSIGNED INT .

    $default  reduce using rule 59 (type_spec)


State 134

   45 type_spec: SIGNED LONG LONG INT .

    $default  reduce using rule 45 (type_spec)


State 135

   58 type_spec: UNSIGNED LONG LONG INT .

    $default  reduce using rule 58 (type_spec)


State 136

  187 primary_expr: NUMBER .

    $default  reduce using rule 187 (primary_expr)


State 137

  167 label: IDENT .
  186 primary_expr: IDENT .

    ':'       reduce using rule 167 (label)
    $default  reduce using rule 186 (primary_expr)


State 138

  153 stmt: BREAK . ';'

    ';'  shift, and go to state 216


State 139

  168 label: CASE . const_expr

    NUMBER   shift, and go to state 217
    CHARLIT  shift, and go to state 218

    const_expr  go to state 219


State 140

  154 stmt: CONTINUE . ';'

    ';'  shift, and go to state 220


State 141

  169 label: DEFAULT .

    $default  reduce using rule 169 (label)


State 142

  163 iterative_stmt: DO . @2 stmt WHILE '(' expr ')' ';'

    $default  reduce using rule 162 (@2)

    @2  go to state 221


State 143

  166 iterative_stmt: FOR . for_expr stmt

    '('  shift, and go to state 222

    for_expr  go to state 223


State 144

  155 stmt: GOTO . IDENT ';'

    IDENT  shift, and go to state 224


State 145

  159 conditional_stmt: IF . '(' expr ')' @1 conditional_body

    '('  shift, and go to state 225


State 146

  183 return_stmt: RETURN . expr ';'
  184            | RETURN . ';'

    NUMBER      shift, and go to state 136
    IDENT       shift, and go to state 212
    PLUSPLUS    shift, and go to state 149
    MINUSMINUS  shift, and go to state 150
    SIZEOF      shift, and go to state 151
    '&'         shift, and go to state 152
    '+'         shift, and go to state 153
    '-'         shift, and go to state 154
    '*'         shift, and go to state 155
    '!'         shift, and go to state 156
    '~'         shift, and go to state 157
    ';'         shift, and go to state 226
    '('         shift, and go to state 159

    primary_expr         go to state 171
    postfix_expr         go to state 172
    subscript_expr       go to state 173
    function_call        go to state 174
    comp_selec_expr      go to state 175
    postinc_expr         go to state 176
    postdec_expr         go to state 177
    cast_expr            go to state 178
    unary_expr           go to state 179
    multiplicative_expr  go to state 180
    additive_expr        go to state 181
    shift_expr           go to state 182
    relational_expr      go to state 183
    equality_expr        go to state 184
    bitwise_or_expr      go to state 185
    bitwise_xor_expr     go to state 186
    bitwise_and_expr     go to state 187
    logical_or_expr      go to state 188
    logical_and_expr     go to state 189
    conditional_expr     go to state 190
    assignment_expr      go to state 191
    comma_expr           go to state 192
    expr                 go to state 227


State 147

  152 stmt: SWITCH . '(' expr ')' stmt

    '('  shift, and go to state 228


State 148

  165 iterative_stmt: WHILE . '(' expr ')' @3 stmt

    '('  shift, and go to state 229


State 149

  216 unary_expr: PLUSPLUS . unary_expr

    NUMBER      shift, and go to state 136
    IDENT       shift, and go to state 212
    PLUSPLUS    shift, and go to state 149
    MINUSMINUS  shift, and go to state 150
    SIZEOF      shift, and go to state 151
    '&'         shift, and go to state 152
    '+'         shift, and go to state 153
    '-'         shift, and go to state 154
    '*'         shift, and go to state 155
    '!'         shift, and go to state 156
    '~'         shift, and go to state 157
    '('         shift, and go to state 230

    primary_expr     go to state 171
    postfix_expr     go to state 172
    subscript_expr   go to state 173
    function_call    go to state 174
    comp_selec_expr  go to state 175
    postinc_expr     go to state 176
    postdec_expr     go to state 177
    unary_expr       go to state 231


State 150

  217 unary_expr: MINUSMINUS . unary_expr

    NUMBER      shift, and go to state 136
    IDENT       shift, and go to state 212
    PLUSPLUS    shift, and go to state 149
    MINUSMINUS  shift, and go to state 150
    SIZEOF      shift, and go to state 151
    '&'         shift, and go to state 152
    '+'         shift, and go to state 153
    '-'         shift, and go to state 154
    '*'         shift, and go to state 155
    '!'         shift, and go to state 156
    '~'         shift, and go to state 157
    '('         shift, and go to state 230

    primary_expr     go to state 171
    postfix_expr     go to state 172
    subscript_expr   go to state 173
    function_call    go to state 174
    comp_selec_expr  go to state 175
    postinc_expr     go to state 176
    postdec_expr     go to state 177
    unary_expr       go to state 232


State 151

  208 unary_expr: SIZEOF . '(' type_spec ')'
  209           | SIZEOF . unary_expr

    NUMBER      shift, and go to state 136
    IDENT       shift, and go to state 212
    PLUSPLUS    shift, and go to state 149
    MINUSMINUS  shift, and go to state 150
    SIZEOF      shift, and go to state 151
    '&'         shift, and go to state 152
    '+'         shift, and go to state 153
    '-'         shift, and go to state 154
    '*'         shift, and go to state 155
    '!'         shift, and go to state 156
    '~'         shift, and go to state 157
    '('         shift, and go to state 233

    primary_expr     go to state 171
    postfix_expr     go to state 172
    subscript_expr   go to state 173
    function_call    go to state 174
    comp_selec_expr  go to state 175
    postinc_expr     go to state 176
    postdec_expr     go to state 177
    unary_expr       go to state 234


State 152

  214 unary_expr: '&' . cast_expr

    NUMBER      shift, and go to state 136
    IDENT       shift, and go to state 212
    PLUSPLUS    shift, and go to state 149
    MINUSMINUS  shift, and go to state 150
    SIZEOF      shift, and go to state 151
    '&'         shift, and go to state 152
    '+'         shift, and go to state 153
    '-'         shift, and go to state 154
    '*'         shift, and go to state 155
    '!'         shift, and go to state 156
    '~'         shift, and go to state 157
    '('         shift, and go to state 159

    primary_expr     go to state 171
    postfix_expr     go to state 172
    subscript_expr   go to state 173
    function_call    go to state 174
    comp_selec_expr  go to state 175
    postinc_expr     go to state 176
    postdec_expr     go to state 177
    cast_expr        go to state 235
    unary_expr       go to state 236


State 153

  211 unary_expr: '+' . cast_expr

    NUMBER      shift, and go to state 136
    IDENT       shift, and go to state 212
    PLUSPLUS    shift, and go to state 149
    MINUSMINUS  shift, and go to state 150
    SIZEOF      shift, and go to state 151
    '&'         shift, and go to state 152
    '+'         shift, and go to state 153
    '-'         shift, and go to state 154
    '*'         shift, and go to state 155
    '!'         shift, and go to state 156
    '~'         shift, and go to state 157
    '('         shift, and go to state 159

    primary_expr     go to state 171
    postfix_expr     go to state 172
    subscript_expr   go to state 173
    function_call    go to state 174
    comp_selec_expr  go to state 175
    postinc_expr     go to state 176
    postdec_expr     go to state 177
    cast_expr        go to state 237
    unary_expr       go to state 236


State 154

  210 unary_expr: '-' . cast_expr

    NUMBER      shift, and go to state 136
    IDENT       shift, and go to state 212
    PLUSPLUS    shift, and go to state 149
    MINUSMINUS  shift, and go to state 150
    SIZEOF      shift, and go to state 151
    '&'         shift, and go to state 152
    '+'         shift, and go to state 153
    '-'         shift, and go to state 154
    '*'         shift, and go to state 155
    '!'         shift, and go to state 156
    '~'         shift, and go to state 157
    '('         shift, and go to state 159

    primary_expr     go to state 171
    postfix_expr     go to state 172
    subscript_expr   go to state 173
    function_call    go to state 174
    comp_selec_expr  go to state 175
    postinc_expr     go to state 176
    postdec_expr     go to state 177
    cast_expr        go to state 238
    unary_expr       go to state 236


State 155

  215 unary_expr: '*' . cast_expr

    NUMBER      shift, and go to state 136
    IDENT       shift, and go to state 212
    PLUSPLUS    shift, and go to state 149
    MINUSMINUS  shift, and go to state 150
    SIZEOF      shift, and go to state 151
    '&'         shift, and go to state 152
    '+'         shift, and go to state 153
    '-'         shift, and go to state 154
    '*'         shift, and go to state 155
    '!'         shift, and go to state 156
    '~'         shift, and go to state 157
    '('         shift, and go to state 159

    primary_expr     go to state 171
    postfix_expr     go to state 172
    subscript_expr   go to state 173
    function_call    go to state 174
    comp_selec_expr  go to state 175
    postinc_expr     go to state 176
    postdec_expr     go to state 177
    cast_expr        go to state 239
    unary_expr       go to state 236


State 156

  212 unary_expr: '!' . cast_expr

    NUMBER      shift, and go to state 136
    IDENT       shift, and go to state 212
    PLUSPLUS    shift, and go to state 149
    MINUSMINUS  shift, and go to state 150
    SIZEOF      shift, and go to state 151
    '&'         shift, and go to state 152
    '+'         shift, and go to state 153
    '-'         shift, and go to state 154
    '*'         shift, and go to state 155
    '!'         shift, and go to state 156
    '~'         shift, and go to state 157
    '('         shift, and go to state 159

    primary_expr     go to state 171
    postfix_expr     go to state 172
    subscript_expr   go to state 173
    function_call    go to state 174
    comp_selec_expr  go to state 175
    postinc_expr     go to state 176
    postdec_expr     go to state 177
    cast_expr        go to state 240
    unary_expr       go to state 236


State 157

  213 unary_expr: '~' . cast_expr

    NUMBER      shift, and go to state 136
    IDENT       shift, and go to state 212
    PLUSPLUS    shift, and go to state 149
    MINUSMINUS  shift, and go to state 150
    SIZEOF      shift, and go to state 151
    '&'         shift, and go to state 152
    '+'         shift, and go to state 153
    '-'         shift, and go to state 154
    '*'         shift, and go to state 155
    '!'         shift, and go to state 156
    '~'         shift, and go to state 157
    '('         shift, and go to state 159

    primary_expr     go to state 171
    postfix_expr     go to state 172
    subscript_expr   go to state 173
    function_call    go to state 174
    comp_selec_expr  go to state 175
    postinc_expr     go to state 176
    postdec_expr     go to state 177
    cast_expr        go to state 241
    unary_expr       go to state 236


State 158

  185 null_stmt: ';' .

    $default  reduce using rule 185 (null_stmt)


State 159

  188 primary_expr: '(' . expr ')'
  205 cast_expr: '(' . type_spec ')' cast_expr
  206          | '(' . struct_spec ')' cast_expr

    NUMBER      shift, and go to state 136
    IDENT       shift, and go to state 212
    ENUM        shift, and go to state 3
    PLUSPLUS    shift, and go to state 149
    MINUSMINUS  shift, and go to state 150
    SIZEOF      shift, and go to state 151
    CHAR        shift, and go to state 11
    INT         shift, and go to state 12
    DOUBLE      shift, and go to state 13
    FLOAT       shift, and go to state 14
    LONG        shift, and go to state 15
    _BOOL       shift, and go to state 16
    UNION       shift, and go to state 17
    STRUCT      shift, and go to state 69
    SHORT       shift, and go to state 19
    SIGNED      shift, and go to state 21
    UNSIGNED    shift, and go to state 22
    VOID        shift, and go to state 23
    '&'         shift, and go to state 152
    '+'         shift, and go to state 153
    '-'         shift, and go to state 154
    '*'         shift, and go to state 155
    '!'         shift, and go to state 156
    '~'         shift, and go to state 157
    '('         shift, and go to state 159

    type_spec            go to state 242
    struct_spec          go to state 243
    enum_type_spec       go to state 34
    enum_type_def        go to state 35
    enum_type_ref        go to state 36
    struct_type_spec     go to state 38
    struct_type_def      go to state 39
    struct_type_ref      go to state 40
    union_type_spec      go to state 41
    union_type_def       go to state 42
    union_type_ref       go to state 43
    primary_expr         go to state 171
    postfix_expr         go to state 172
    subscript_expr       go to state 173
    function_call        go to state 174
    comp_selec_expr      go to state 175
    postinc_expr         go to state 176
    postdec_expr         go to state 177
    cast_expr            go to state 178
    unary_expr           go to state 179
    multiplicative_expr  go to state 180
    additive_expr        go to state 181
    shift_expr           go to state 182
    relational_expr      go to state 183
    equality_expr        go to state 184
    bitwise_or_expr      go to state 185
    bitwise_xor_expr     go to state 186
    bitwise_and_expr     go to state 187
    logical_or_expr      go to state 188
    logical_and_expr     go to state 189
    conditional_expr     go to state 190
    assignment_expr      go to state 191
    comma_expr           go to state 192
    expr                 go to state 244


State 160

    8 decl_or_stmt_list: decl_or_stmt_list . decl_or_stmt
  181 compound_stmt: '{' $@4 decl_or_stmt_list . '}'

    NUMBER      shift, and go to state 136
    IDENT       shift, and go to state 137
    BREAK       shift, and go to state 138
    CASE        shift, and go to state 139
    CONTINUE    shift, and go to state 140
    DEFAULT     shift, and go to state 141
    DO          shift, and go to state 142
    ENUM        shift, and go to state 3
    FOR         shift, and go to state 143
    GOTO        shift, and go to state 144
    IF          shift, and go to state 145
    RETURN      shift, and go to state 146
    SWITCH      shift, and go to state 147
    WHILE       shift, and go to state 148
    PLUSPLUS    shift, and go to state 149
    MINUSMINUS  shift, and go to state 150
    SIZEOF      shift, and go to state 151
    AUTO        shift, and go to state 4
    EXTERN      shift, and go to state 5
    REGISTER    shift, and go to state 6
    STATIC      shift, and go to state 7
    CONST       shift, and go to state 8
    RESTRICT    shift, and go to state 9
    VOLATILE    shift, and go to state 10
    CHAR        shift, and go to state 11
    INT         shift, and go to state 12
    DOUBLE      shift, and go to state 13
    FLOAT       shift, and go to state 14
    LONG        shift, and go to state 15
    _BOOL       shift, and go to state 16
    UNION       shift, and go to state 17
    STRUCT      shift, and go to state 18
    SHORT       shift, and go to state 19
    INLINE      shift, and go to state 20
    SIGNED      shift, and go to state 21
    UNSIGNED    shift, and go to state 22
    VOID        shift, and go to state 23
    '&'         shift, and go to state 152
    '+'         shift, and go to state 153
    '-'         shift, and go to state 154
    '*'         shift, and go to state 155
    '!'         shift, and go to state 156
    '~'         shift, and go to state 157
    ';'         shift, and go to state 158
    '('         shift, and go to state 159
    '{'         shift, and go to state 66
    '}'         shift, and go to state 245

    decl_or_stmt         go to state 246
    decl                 go to state 162
    decl_spec            go to state 163
    stg_spec             go to state 29
    func_spec            go to state 30
    type_spec            go to state 31
    struct_spec          go to state 32
    type_qual            go to state 33
    enum_type_spec       go to state 34
    enum_type_def        go to state 35
    enum_type_ref        go to state 36
    forward_decl         go to state 37
    struct_type_spec     go to state 38
    struct_type_def      go to state 39
    struct_type_ref      go to state 40
    union_type_spec      go to state 41
    union_type_def       go to state 42
    union_type_ref       go to state 43
    stmt                 go to state 164
    conditional_stmt     go to state 165
    iterative_stmt       go to state 166
    label                go to state 167
    compound_stmt        go to state 168
    return_stmt          go to state 169
    null_stmt            go to state 170
    primary_expr         go to state 171
    postfix_expr         go to state 172
    subscript_expr       go to state 173
    function_call        go to state 174
    comp_selec_expr      go to state 175
    postinc_expr         go to state 176
    postdec_expr         go to state 177
    cast_expr            go to state 178
    unary_expr           go to state 179
    multiplicative_expr  go to state 180
    additive_expr        go to state 181
    shift_expr           go to state 182
    relational_expr      go to state 183
    equality_expr        go to state 184
    bitwise_or_expr      go to state 185
    bitwise_xor_expr     go to state 186
    bitwise_and_expr     go to state 187
    logical_or_expr      go to state 188
    logical_and_expr     go to state 189
    conditional_expr     go to state 190
    assignment_expr      go to state 191
    comma_expr           go to state 192
    expr                 go to state 193


State 161

    7 decl_or_stmt_list: decl_or_stmt .

    $default  reduce using rule 7 (decl_or_stmt_list)


State 162

    9 decl_or_stmt: decl .

    $default  reduce using rule 9 (decl_or_stmt)


State 163

   11 decl: decl_spec . init_decl_list ';'
   19 decl_spec: decl_spec . type_spec
   20          | decl_spec . struct_spec
   21          | decl_spec . stg_spec
   22          | decl_spec . type_qual
   23          | decl_spec . func_spec

    IDENT     shift, and go to state 68
    ENUM      shift, and go to state 3
    AUTO      shift, and go to state 4
    EXTERN    shift, and go to state 5
    REGISTER  shift, and go to state 6
    STATIC    shift, and go to state 7
    CONST     shift, and go to state 8
    RESTRICT  shift, and go to state 9
    VOLATILE  shift, and go to state 10
    CHAR      shift, and go to state 11
    INT       shift, and go to state 12
    DOUBLE    shift, and go to state 13
    FLOAT     shift, and go to state 14
    LONG      shift, and go to state 15
    _BOOL     shift, and go to state 16
    UNION     shift, and go to state 17
    STRUCT    shift, and go to state 69
    SHORT     shift, and go to state 19
    INLINE    shift, and go to state 20
    SIGNED    shift, and go to state 21
    UNSIGNED  shift, and go to state 22
    VOID      shift, and go to state 23
    '*'       shift, and go to state 70
    '('       shift, and go to state 71

    init_decl_list    go to state 72
    stg_spec          go to state 73
    func_spec         go to state 74
    type_spec         go to state 75
    struct_spec       go to state 76
    type_qual         go to state 77
    declarator        go to state 78
    direct_decl       go to state 79
    simple_decl       go to state 80
    pointer_decl      go to state 81
    pointer           go to state 82
    arr_decl          go to state 83
    func_decl         go to state 116
    enum_type_spec    go to state 34
    enum_type_def     go to state 35
    enum_type_ref     go to state 36
    struct_type_spec  go to state 38
    struct_type_def   go to state 39
    struct_type_ref   go to state 40
    union_type_spec   go to state 41
    union_type_def    go to state 42
    union_type_ref    go to state 43


State 164

   10 decl_or_stmt: stmt .

    $default  reduce using rule 10 (decl_or_stmt)


State 165

  150 stmt: conditional_stmt .

    $default  reduce using rule 150 (stmt)


State 166

  151 stmt: iterative_stmt .

    $default  reduce using rule 151 (stmt)


State 167

  148 stmt: label . ':' stmt

    ':'  shift, and go to state 247


State 168

  149 stmt: compound_stmt .

    $default  reduce using rule 149 (stmt)


State 169

  156 stmt: return_stmt .

    $default  reduce using rule 156 (stmt)


State 170

  157 stmt: null_stmt .

    $default  reduce using rule 157 (stmt)


State 171

  189 postfix_expr: primary_expr .

    $default  reduce using rule 189 (postfix_expr)


State 172

  195 subscript_expr: postfix_expr . '[' expr ']'
  196 function_call: postfix_expr . '(' expr_list ')'
  197              | postfix_expr . '(' ')'
  200 comp_selec_expr: postfix_expr . '.' IDENT
  201                | postfix_expr . INDSEL IDENT
  202 postinc_expr: postfix_expr . PLUSPLUS
  203 postdec_expr: postfix_expr . MINUSMINUS
  207 unary_expr: postfix_expr .

    INDSEL      shift, and go to state 248
    PLUSPLUS    shift, and go to state 249
    MINUSMINUS  shift, and go to state 250
    '.'         shift, and go to state 251
    '('         shift, and go to state 252
    '['         shift, and go to state 253

    $default  reduce using rule 207 (unary_expr)


State 173

  190 postfix_expr: subscript_expr .

    $default  reduce using rule 190 (postfix_expr)


State 174

  192 postfix_expr: function_call .

    $default  reduce using rule 192 (postfix_expr)


State 175

  191 postfix_expr: comp_selec_expr .

    $default  reduce using rule 191 (postfix_expr)


State 176

  193 postfix_expr: postinc_expr .

    $default  reduce using rule 193 (postfix_expr)


State 177

  194 postfix_expr: postdec_expr .

    $default  reduce using rule 194 (postfix_expr)


State 178

  218 multiplicative_expr: cast_expr .

    $default  reduce using rule 218 (multiplicative_expr)


State 179

  204 cast_expr: unary_expr .
  249 assignment_expr: unary_expr . '=' assignment_expr
  250                | unary_expr . PLUSEQ assignment_expr
  251                | unary_expr . MINUSEQ assignment_expr
  252                | unary_expr . TIMESEQ assignment_expr
  253                | unary_expr . DIVEQ assignment_expr
  254                | unary_expr . MODEQ assignment_expr
  255                | unary_expr . SHLEQ assignment_expr
  256                | unary_expr . SHREQ assignment_expr
  257                | unary_expr . ANDEQ assignment_expr
  258                | unary_expr . OREQ assignment_expr
  259                | unary_expr . XOREQ assignment_expr

    PLUSEQ   shift, and go to state 254
    MINUSEQ  shift, and go to state 255
    TIMESEQ  shift, and go to state 256
    DIVEQ    shift, and go to state 257
    MODEQ    shift, and go to state 258
    SHLEQ    shift, and go to state 259
    SHREQ    shift, and go to state 260
    ANDEQ    shift, and go to state 261
    OREQ     shift, and go to state 262
    XOREQ    shift, and go to state 263
    '='      shift, and go to state 264

    $default  reduce using rule 204 (cast_expr)


State 180

  219 multiplicative_expr: multiplicative_expr . '*' cast_expr
  220                    | multiplicative_expr . '/' cast_expr
  221                    | multiplicative_expr . '%' cast_expr
  222 additive_expr: multiplicative_expr .

    '*'  shift, and go to state 265
    '/'  shift, and go to state 266
    '%'  shift, and go to state 267

    $default  reduce using rule 222 (additive_expr)


State 181

  223 additive_expr: additive_expr . '+' multiplicative_expr
  224              | additive_expr . '-' multiplicative_expr
  225 shift_expr: additive_expr .

    '+'  shift, and go to state 268
    '-'  shift, and go to state 269

    $default  reduce using rule 225 (shift_expr)


State 182

  226 shift_expr: shift_expr . SHL additive_expr
  227           | shift_expr . SHR additive_expr
  228 relational_expr: shift_expr .

    SHL  shift, and go to state 270
    SHR  shift, and go to state 271

    $default  reduce using rule 228 (relational_expr)


State 183

  229 relational_expr: relational_expr . '<' shift_expr
  230                | relational_expr . '>' shift_expr
  231                | relational_expr . LTEQ shift_expr
  232                | relational_expr . GTEQ shift_expr
  233 equality_expr: relational_expr .

    GTEQ  shift, and go to state 272
    LTEQ  shift, and go to state 273
    '<'   shift, and go to state 274
    '>'   shift, and go to state 275

    $default  reduce using rule 233 (equality_expr)


State 184

  234 equality_expr: equality_expr . EQEQ relational_expr
  235              | equality_expr . NOTEQ relational_expr
  240 bitwise_and_expr: equality_expr .

    EQEQ   shift, and go to state 276
    NOTEQ  shift, and go to state 277

    $default  reduce using rule 240 (bitwise_and_expr)


State 185

  237 bitwise_or_expr: bitwise_or_expr . '|' bitwise_xor_expr
  244 logical_and_expr: bitwise_or_expr .

    '|'  shift, and go to state 278

    $default  reduce using rule 244 (logical_and_expr)


State 186

  236 bitwise_or_expr: bitwise_xor_expr .
  239 bitwise_xor_expr: bitwise_xor_expr . '^' bitwise_and_expr

    '^'  shift, and go to state 279

    $default  reduce using rule 236 (bitwise_or_expr)


State 187

  238 bitwise_xor_expr: bitwise_and_expr .
  241 bitwise_and_expr: bitwise_and_expr . '&' equality_expr

    '&'  shift, and go to state 280

    $default  reduce using rule 238 (bitwise_xor_expr)


State 188

  243 logical_or_expr: logical_or_expr . LOGOR logical_and_expr
  246 conditional_expr: logical_or_expr .
  247                 | logical_or_expr . '?' expr ':' conditional_expr

    LOGOR  shift, and go to state 281
    '?'    shift, and go to state 282

    $default  reduce using rule 246 (conditional_expr)


State 189

  242 logical_or_expr: logical_and_expr .
  245 logical_and_expr: logical_and_expr . LOGAND bitwise_or_expr

    LOGAND  shift, and go to state 283

    $default  reduce using rule 242 (logical_or_expr)


State 190

  248 assignment_expr: conditional_expr .

    $default  reduce using rule 248 (assignment_expr)


State 191

  260 comma_expr: assignment_expr .

    $default  reduce using rule 260 (comma_expr)


State 192

  261 comma_expr: comma_expr . ',' assignment_expr
  262 expr: comma_expr .

    ','  shift, and go to state 284

    ','       [reduce using rule 262 (expr)]
    $default  reduce using rule 262 (expr)


State 193

  147 stmt: expr . ';'

    ';'  shift, and go to state 285


State 194

   80 direct_decl: '(' declarator ')' .

    $default  reduce using rule 80 (direct_decl)


State 195

   25 init_decl_list: init_decl_list ',' declarator .

    $default  reduce using rule 25 (init_decl_list)


State 196

  263 ident_list: IDENT .

    $default  reduce using rule 263 (ident_list)


State 197

   93 func_decl: direct_decl '(' ')' .

    $default  reduce using rule 93 (func_decl)


State 198

   19 decl_spec: decl_spec . type_spec
   20          | decl_spec . struct_spec
   21          | decl_spec . stg_spec
   22          | decl_spec . type_qual
   23          | decl_spec . func_spec
   99 param_decl: decl_spec . declarator
  100           | decl_spec .
  101           | decl_spec . abstract_decl

    IDENT     shift, and go to state 68
    ENUM      shift, and go to state 3
    AUTO      shift, and go to state 4
    EXTERN    shift, and go to state 5
    REGISTER  shift, and go to state 6
    STATIC    shift, and go to state 7
    CONST     shift, and go to state 8
    RESTRICT  shift, and go to state 9
    VOLATILE  shift, and go to state 10
    CHAR      shift, and go to state 11
    INT       shift, and go to state 12
    DOUBLE    shift, and go to state 13
    FLOAT     shift, and go to state 14
    LONG      shift, and go to state 15
    _BOOL     shift, and go to state 16
    UNION     shift, and go to state 17
    STRUCT    shift, and go to state 69
    SHORT     shift, and go to state 19
    INLINE    shift, and go to state 20
    SIGNED    shift, and go to state 21
    UNSIGNED  shift, and go to state 22
    VOID      shift, and go to state 23
    '*'       shift, and go to state 70
    '('       shift, and go to state 286
    '['       shift, and go to state 287

    $default  reduce using rule 100 (param_decl)

    stg_spec              go to state 73
    func_spec             go to state 74
    type_spec             go to state 75
    struct_spec           go to state 76
    type_qual             go to state 77
    declarator            go to state 288
    direct_decl           go to state 79
    simple_decl           go to state 80
    pointer_decl          go to state 81
    pointer               go to state 289
    abstract_decl         go to state 290
    arr_decl              go to state 83
    func_decl             go to state 116
    enum_type_spec        go to state 34
    enum_type_def         go to state 35
    enum_type_ref         go to state 36
    struct_type_spec      go to state 38
    struct_type_def       go to state 39
    struct_type_ref       go to state 40
    union_type_spec       go to state 41
    union_type_def        go to state 42
    union_type_ref        go to state 43
    direct_abstract_decl  go to state 291


State 199

   16 decl_spec: struct_spec .

    $default  reduce using rule 16 (decl_spec)


State 200

   92 func_decl: direct_decl '(' param_type_list . ')'

    ')'  shift, and go to state 292


State 201

   95 param_type_list: param_list .
   96                | param_list . ',' ELLIPSIS
   98 param_list: param_list . ',' param_decl

    ','  shift, and go to state 293

    $default  reduce using rule 95 (param_type_list)


State 202

   97 param_list: param_decl .

    $default  reduce using rule 97 (param_list)


State 203

   94 func_decl: direct_decl '(' ident_list . ')'
  264 ident_list: ident_list . ',' IDENT

    ','  shift, and go to state 294
    ')'  shift, and go to state 295


State 204

   91 arr_decl: direct_decl '[' NUMBER . ']'

    ']'  shift, and go to state 296


State 205

   90 arr_decl: direct_decl '[' ']' .

    $default  reduce using rule 90 (arr_decl)


State 206

  129 bit_field: ':' NUMBER .

    $default  reduce using rule 129 (bit_field)


State 207

  130 bit_field: declarator ':' . NUMBER

    NUMBER  shift, and go to state 297


State 208

  126 component_decl_list: component_decl_list ',' . component_declarator

    IDENT  shift, and go to state 68
    ':'    shift, and go to state 124
    '*'    shift, and go to state 70
    '('    shift, and go to state 71

    declarator            go to state 125
    direct_decl           go to state 79
    simple_decl           go to state 80
    pointer_decl          go to state 81
    pointer               go to state 82
    arr_decl              go to state 83
    func_decl             go to state 116
    component_declarator  go to state 298
    bit_field             go to state 128


State 209

  122 component_decl: component_decl_spec component_decl_list ';' .

    $default  reduce using rule 122 (component_decl)


State 210

  107 enum_type_def: ENUM IDENT '{' enum_def_list ',' . '}'
  110 enum_def_list: enum_def_list ',' . enum_constant_def

    IDENT  shift, and go to state 94
    '}'    shift, and go to state 299

    enum_constant_def  go to state 215


State 211

  105 enum_type_def: ENUM IDENT '{' enum_def_list '}' .

    $default  reduce using rule 105 (enum_type_def)


State 212

  186 primary_expr: IDENT .

    $default  reduce using rule 186 (primary_expr)


State 213

  112 enum_constant_def: IDENT '=' expr .

    $default  reduce using rule 112 (enum_constant_def)


State 214

  106 enum_type_def: ENUM '{' enum_def_list ',' '}' .

    $default  reduce using rule 106 (enum_type_def)


State 215

  110 enum_def_list: enum_def_list ',' enum_constant_def .

    $default  reduce using rule 110 (enum_def_list)


State 216

  153 stmt: BREAK ';' .

    $default  reduce using rule 153 (stmt)


State 217

  170 const_expr: NUMBER .

    $default  reduce using rule 170 (const_expr)


State 218

  171 const_expr: CHARLIT .

    $default  reduce using rule 171 (const_expr)


State 219

  168 label: CASE const_expr .

    $default  reduce using rule 168 (label)


State 220

  154 stmt: CONTINUE ';' .

    $default  reduce using rule 154 (stmt)


State 221

  163 iterative_stmt: DO @2 . stmt WHILE '(' expr ')' ';'

    NUMBER      shift, and go to state 136
    IDENT       shift, and go to state 137
    BREAK       shift, and go to state 138
    CASE        shift, and go to state 139
    CONTINUE    shift, and go to state 140
    DEFAULT     shift, and go to state 141
    DO          shift, and go to state 142
    FOR         shift, and go to state 143
    GOTO        shift, and go to state 144
    IF          shift, and go to state 145
    RETURN      shift, and go to state 146
    SWITCH      shift, and go to state 147
    WHILE       shift, and go to state 148
    PLUSPLUS    shift, and go to state 149
    MINUSMINUS  shift, and go to state 150
    SIZEOF      shift, and go to state 151
    '&'         shift, and go to state 152
    '+'         shift, and go to state 153
    '-'         shift, and go to state 154
    '*'         shift, and go to state 155
    '!'         shift, and go to state 156
    '~'         shift, and go to state 157
    ';'         shift, and go to state 158
    '('         shift, and go to state 159
    '{'         shift, and go to state 66

    stmt                 go to state 300
    conditional_stmt     go to state 165
    iterative_stmt       go to state 166
    label                go to state 167
    compound_stmt        go to state 168
    return_stmt          go to state 169
    null_stmt            go to state 170
    primary_expr         go to state 171
    postfix_expr         go to state 172
    subscript_expr       go to state 173
    function_call        go to state 174
    comp_selec_expr      go to state 175
    postinc_expr         go to state 176
    postdec_expr         go to state 177
    cast_expr            go to state 178
    unary_expr           go to state 179
    multiplicative_expr  go to state 180
    additive_expr        go to state 181
    shift_expr           go to state 182
    relational_expr      go to state 183
    equality_expr        go to state 184
    bitwise_or_expr      go to state 185
    bitwise_xor_expr     go to state 186
    bitwise_and_expr     go to state 187
    logical_or_expr      go to state 188
    logical_and_expr     go to state 189
    conditional_expr     go to state 190
    assignment_expr      go to state 191
    comma_expr           go to state 192
    expr                 go to state 193


State 222

  172 for_expr: '(' . ';' ';' ';' ')'
  173         | '(' . expr ';' ';' ')'
  174         | '(' . ';' expr ';' ')'
  175         | '(' . ';' ';' expr ')'
  176         | '(' . expr ';' expr ';' ')'
  177         | '(' . expr ';' ';' expr ')'
  178         | '(' . ';' expr ';' expr ')'
  179         | '(' . expr ';' expr ';' expr ')'

    NUMBER      shift, and go to state 136
    IDENT       shift, and go to state 212
    PLUSPLUS    shift, and go to state 149
    MINUSMINUS  shift, and go to state 150
    SIZEOF      shift, and go to state 151
    '&'         shift, and go to state 152
    '+'         shift, and go to state 153
    '-'         shift, and go to state 154
    '*'         shift, and go to state 155
    '!'         shift, and go to state 156
    '~'         shift, and go to state 157
    ';'         shift, and go to state 301
    '('         shift, and go to state 159

    primary_expr         go to state 171
    postfix_expr         go to state 172
    subscript_expr       go to state 173
    function_call        go to state 174
    comp_selec_expr      go to state 175
    postinc_expr         go to state 176
    postdec_expr         go to state 177
    cast_expr            go to state 178
    unary_expr           go to state 179
    multiplicative_expr  go to state 180
    additive_expr        go to state 181
    shift_expr           go to state 182
    relational_expr      go to state 183
    equality_expr        go to state 184
    bitwise_or_expr      go to state 185
    bitwise_xor_expr     go to state 186
    bitwise_and_expr     go to state 187
    logical_or_expr      go to state 188
    logical_and_expr     go to state 189
    conditional_expr     go to state 190
    assignment_expr      go to state 191
    comma_expr           go to state 192
    expr                 go to state 302


State 223

  166 iterative_stmt: FOR for_expr . stmt

    NUMBER      shift, and go to state 136
    IDENT       shift, and go to state 137
    BREAK       shift, and go to state 138
    CASE        shift, and go to state 139
    CONTINUE    shift, and go to state 140
    DEFAULT     shift, and go to state 141
    DO          shift, and go to state 142
    FOR         shift, and go to state 143
    GOTO        shift, and go to state 144
    IF          shift, and go to state 145
    RETURN      shift, and go to state 146
    SWITCH      shift, and go to state 147
    WHILE       shift, and go to state 148
    PLUSPLUS    shift, and go to state 149
    MINUSMINUS  shift, and go to state 150
    SIZEOF      shift, and go to state 151
    '&'         shift, and go to state 152
    '+'         shift, and go to state 153
    '-'         shift, and go to state 154
    '*'         shift, and go to state 155
    '!'         shift, and go to state 156
    '~'         shift, and go to state 157
    ';'         shift, and go to state 158
    '('         shift, and go to state 159
    '{'         shift, and go to state 66

    stmt                 go to state 303
    conditional_stmt     go to state 165
    iterative_stmt       go to state 166
    label                go to state 167
    compound_stmt        go to state 168
    return_stmt          go to state 169
    null_stmt            go to state 170
    primary_expr         go to state 171
    postfix_expr         go to state 172
    subscript_expr       go to state 173
    function_call        go to state 174
    comp_selec_expr      go to state 175
    postinc_expr         go to state 176
    postdec_expr         go to state 177
    cast_expr            go to state 178
    unary_expr           go to state 179
    multiplicative_expr  go to state 180
    additive_expr        go to state 181
    shift_expr           go to state 182
    relational_expr      go to state 183
    equality_expr        go to state 184
    bitwise_or_expr      go to state 185
    bitwise_xor_expr     go to state 186
    bitwise_and_expr     go to state 187
    logical_or_expr      go to state 188
    logical_and_expr     go to state 189
    conditional_expr     go to state 190
    assignment_expr      go to state 191
    comma_expr           go to state 192
    expr                 go to state 193


State 224

  155 stmt: GOTO IDENT . ';'

    ';'  shift, and go to state 304


State 225

  159 conditional_stmt: IF '(' . expr ')' @1 conditional_body

    NUMBER      shift, and go to state 136
    IDENT       shift, and go to state 212
    PLUSPLUS    shift, and go to state 149
    MINUSMINUS  shift, and go to state 150
    SIZEOF      shift, and go to state 151
    '&'         shift, and go to state 152
    '+'         shift, and go to state 153
    '-'         shift, and go to state 154
    '*'         shift, and go to state 155
    '!'         shift, and go to state 156
    '~'         shift, and go to state 157
    '('         shift, and go to state 159

    primary_expr         go to state 171
    postfix_expr         go to state 172
    subscript_expr       go to state 173
    function_call        go to state 174
    comp_selec_expr      go to state 175
    postinc_expr         go to state 176
    postdec_expr         go to state 177
    cast_expr            go to state 178
    unary_expr           go to state 179
    multiplicative_expr  go to state 180
    additive_expr        go to state 181
    shift_expr           go to state 182
    relational_expr      go to state 183
    equality_expr        go to state 184
    bitwise_or_expr      go to state 185
    bitwise_xor_expr     go to state 186
    bitwise_and_expr     go to state 187
    logical_or_expr      go to state 188
    logical_and_expr     go to state 189
    conditional_expr     go to state 190
    assignment_expr      go to state 191
    comma_expr           go to state 192
    expr                 go to state 305


State 226

  184 return_stmt: RETURN ';' .

    $default  reduce using rule 184 (return_stmt)


State 227

  183 return_stmt: RETURN expr . ';'

    ';'  shift, and go to state 306


State 228

  152 stmt: SWITCH '(' . expr ')' stmt

    NUMBER      shift, and go to state 136
    IDENT       shift, and go to state 212
    PLUSPLUS    shift, and go to state 149
    MINUSMINUS  shift, and go to state 150
    SIZEOF      shift, and go to state 151
    '&'         shift, and go to state 152
    '+'         shift, and go to state 153
    '-'         shift, and go to state 154
    '*'         shift, and go to state 155
    '!'         shift, and go to state 156
    '~'         shift, and go to state 157
    '('         shift, and go to state 159

    primary_expr         go to state 171
    postfix_expr         go to state 172
    subscript_expr       go to state 173
    function_call        go to state 174
    comp_selec_expr      go to state 175
    postinc_expr         go to state 176
    postdec_expr         go to state 177
    cast_expr            go to state 178
    unary_expr           go to state 179
    multiplicative_expr  go to state 180
    additive_expr        go to state 181
    shift_expr           go to state 182
    relational_expr      go to state 183
    equality_expr        go to state 184
    bitwise_or_expr      go to state 185
    bitwise_xor_expr     go to state 186
    bitwise_and_expr     go to state 187
    logical_or_expr      go to state 188
    logical_and_expr     go to state 189
    conditional_expr     go to state 190
    assignment_expr      go to state 191
    comma_expr           go to state 192
    expr                 go to state 307


State 229

  165 iterative_stmt: WHILE '(' . expr ')' @3 stmt

    NUMBER      shift, and go to state 136
    IDENT       shift, and go to state 212
    PLUSPLUS    shift, and go to state 149
    MINUSMINUS  shift, and go to state 150
    SIZEOF      shift, and go to state 151
    '&'         shift, and go to state 152
    '+'         shift, and go to state 153
    '-'         shift, and go to state 154
    '*'         shift, and go to state 155
    '!'         shift, and go to state 156
    '~'         shift, and go to state 157
    '('         shift, and go to state 159

    primary_expr         go to state 171
    postfix_expr         go to state 172
    subscript_expr       go to state 173
    function_call        go to state 174
    comp_selec_expr      go to state 175
    postinc_expr         go to state 176
    postdec_expr         go to state 177
    cast_expr            go to state 178
    unary_expr           go to state 179
    multiplicative_expr  go to state 180
    additive_expr        go to state 181
    shift_expr           go to state 182
    relational_expr      go to state 183
    equality_expr        go to state 184
    bitwise_or_expr      go to state 185
    bitwise_xor_expr     go to state 186
    bitwise_and_expr     go to state 187
    logical_or_expr      go to state 188
    logical_and_expr     go to state 189
    conditional_expr     go to state 190
    assignment_expr      go to state 191
    comma_expr           go to state 192
    expr                 go to state 308


State 230

  188 primary_expr: '(' . expr ')'

    NUMBER      shift, and go to state 136
    IDENT       shift, and go to state 212
    PLUSPLUS    shift, and go to state 149
    MINUSMINUS  shift, and go to state 150
    SIZEOF      shift, and go to state 151
    '&'         shift, and go to state 152
    '+'         shift, and go to state 153
    '-'         shift, and go to state 154
    '*'         shift, and go to state 155
    '!'         shift, and go to state 156
    '~'         shift, and go to state 157
    '('         shift, and go to state 159

    primary_expr         go to state 171
    postfix_expr         go to state 172
    subscript_expr       go to state 173
    function_call        go to state 174
    comp_selec_expr      go to state 175
    postinc_expr         go to state 176
    postdec_expr         go to state 177
    cast_expr            go to state 178
    unary_expr           go to state 179
    multiplicative_expr  go to state 180
    additive_expr        go to state 181
    shift_expr           go to state 182
    relational_expr      go to state 183
    equality_expr        go to state 184
    bitwise_or_expr      go to state 185
    bitwise_xor_expr     go to state 186
    bitwise_and_expr     go to state 187
    logical_or_expr      go to state 188
    logical_and_expr     go to state 189
    conditional_expr     go to state 190
    assignment_expr      go to state 191
    comma_expr           go to state 192
    expr                 go to state 244


State 231

  216 unary_expr: PLUSPLUS unary_expr .

    $default  reduce using rule 216 (unary_expr)


State 232

  217 unary_expr: MINUSMINUS unary_expr .

    $default  reduce using rule 217 (unary_expr)


State 233

  188 primary_expr: '(' . expr ')'
  208 unary_expr: SIZEOF '(' . type_spec ')'

    NUMBER      shift, and go to state 136
    IDENT       shift, and go to state 212
    PLUSPLUS    shift, and go to state 149
    MINUSMINUS  shift, and go to state 150
    SIZEOF      shift, and go to state 151
    CHAR        shift, and go to state 11
    INT         shift, and go to state 12
    DOUBLE      shift, and go to state 13
    FLOAT       shift, and go to state 14
    LONG        shift, and go to state 15
    _BOOL       shift, and go to state 16
    SHORT       shift, and go to state 19
    SIGNED      shift, and go to state 21
    UNSIGNED    shift, and go to state 22
    VOID        shift, and go to state 23
    '&'         shift, and go to state 152
    '+'         shift, and go to state 153
    '-'         shift, and go to state 154
    '*'         shift, and go to state 155
    '!'         shift, and go to state 156
    '~'         shift, and go to state 157
    '('         shift, and go to state 159

    type_spec            go to state 309
    primary_expr         go to state 171
    postfix_expr         go to state 172
    subscript_expr       go to state 173
    function_call        go to state 174
    comp_selec_expr      go to state 175
    postinc_expr         go to state 176
    postdec_expr         go to state 177
    cast_expr            go to state 178
    unary_expr           go to state 179
    multiplicative_expr  go to state 180
    additive_expr        go to state 181
    shift_expr           go to state 182
    relational_expr      go to state 183
    equality_expr        go to state 184
    bitwise_or_expr      go to state 185
    bitwise_xor_expr     go to state 186
    bitwise_and_expr     go to state 187
    logical_or_expr      go to state 188
    logical_and_expr     go to state 189
    conditional_expr     go to state 190
    assignment_expr      go to state 191
    comma_expr           go to state 192
    expr                 go to state 244


State 234

  209 unary_expr: SIZEOF unary_expr .

    $default  reduce using rule 209 (unary_expr)


State 235

  214 unary_expr: '&' cast_expr .

    $default  reduce using rule 214 (unary_expr)


State 236

  204 cast_expr: unary_expr .

    $default  reduce using rule 204 (cast_expr)


State 237

  211 unary_expr: '+' cast_expr .

    $default  reduce using rule 211 (unary_expr)


State 238

  210 unary_expr: '-' cast_expr .

    $default  reduce using rule 210 (unary_expr)


State 239

  215 unary_expr: '*' cast_expr .

    $default  reduce using rule 215 (unary_expr)


State 240

  212 unary_expr: '!' cast_expr .

    $default  reduce using rule 212 (unary_expr)


State 241

  213 unary_expr: '~' cast_expr .

    $default  reduce using rule 213 (unary_expr)


State 242

  205 cast_expr: '(' type_spec . ')' cast_expr

    ')'  shift, and go to state 310


State 243

  206 cast_expr: '(' struct_spec . ')' cast_expr

    ')'  shift, and go to state 311


State 244

  188 primary_expr: '(' expr . ')'

    ')'  shift, and go to state 312


State 245

  181 compound_stmt: '{' $@4 decl_or_stmt_list '}' .

    $default  reduce using rule 181 (compound_stmt)


State 246

    8 decl_or_stmt_list: decl_or_stmt_list decl_or_stmt .

    $default  reduce using rule 8 (decl_or_stmt_list)


State 247

  148 stmt: label ':' . stmt

    NUMBER      shift, and go to state 136
    IDENT       shift, and go to state 137
    BREAK       shift, and go to state 138
    CASE        shift, and go to state 139
    CONTINUE    shift, and go to state 140
    DEFAULT     shift, and go to state 141
    DO          shift, and go to state 142
    FOR         shift, and go to state 143
    GOTO        shift, and go to state 144
    IF          shift, and go to state 145
    RETURN      shift, and go to state 146
    SWITCH      shift, and go to state 147
    WHILE       shift, and go to state 148
    PLUSPLUS    shift, and go to state 149
    MINUSMINUS  shift, and go to state 150
    SIZEOF      shift, and go to state 151
    '&'         shift, and go to state 152
    '+'         shift, and go to state 153
    '-'         shift, and go to state 154
    '*'         shift, and go to state 155
    '!'         shift, and go to state 156
    '~'         shift, and go to state 157
    ';'         shift, and go to state 158
    '('         shift, and go to state 159
    '{'         shift, and go to state 66

    stmt                 go to state 313
    conditional_stmt     go to state 165
    iterative_stmt       go to state 166
    label                go to state 167
    compound_stmt        go to state 168
    return_stmt          go to state 169
    null_stmt            go to state 170
    primary_expr         go to state 171
    postfix_expr         go to state 172
    subscript_expr       go to state 173
    function_call        go to state 174
    comp_selec_expr      go to state 175
    postinc_expr         go to state 176
    postdec_expr         go to state 177
    cast_expr            go to state 178
    unary_expr           go to state 179
    multiplicative_expr  go to state 180
    additive_expr        go to state 181
    shift_expr           go to state 182
    relational_expr      go to state 183
    equality_expr        go to state 184
    bitwise_or_expr      go to state 185
    bitwise_xor_expr     go to state 186
    bitwise_and_expr     go to state 187
    logical_or_expr      go to state 188
    logical_and_expr     go to state 189
    conditional_expr     go to state 190
    assignment_expr      go to state 191
    comma_expr           go to state 192
    expr                 go to state 193


State 248

  201 comp_selec_expr: postfix_expr INDSEL . IDENT

    IDENT  shift, and go to state 314


State 249

  202 postinc_expr: postfix_expr PLUSPLUS .

    $default  reduce using rule 202 (postinc_expr)


State 250

  203 postdec_expr: postfix_expr MINUSMINUS .

    $default  reduce using rule 203 (postdec_expr)


State 251

  200 comp_selec_expr: postfix_expr '.' . IDENT

    IDENT  shift, and go to state 315


State 252

  196 function_call: postfix_expr '(' . expr_list ')'
  197              | postfix_expr '(' . ')'

    NUMBER      shift, and go to state 136
    IDENT       shift, and go to state 212
    PLUSPLUS    shift, and go to state 149
    MINUSMINUS  shift, and go to state 150
    SIZEOF      shift, and go to state 151
    '&'         shift, and go to state 152
    '+'         shift, and go to state 153
    '-'         shift, and go to state 154
    '*'         shift, and go to state 155
    '!'         shift, and go to state 156
    '~'         shift, and go to state 157
    '('         shift, and go to state 159
    ')'         shift, and go to state 316

    primary_expr         go to state 171
    postfix_expr         go to state 172
    subscript_expr       go to state 173
    function_call        go to state 174
    expr_list            go to state 317
    comp_selec_expr      go to state 175
    postinc_expr         go to state 176
    postdec_expr         go to state 177
    cast_expr            go to state 178
    unary_expr           go to state 179
    multiplicative_expr  go to state 180
    additive_expr        go to state 181
    shift_expr           go to state 182
    relational_expr      go to state 183
    equality_expr        go to state 184
    bitwise_or_expr      go to state 185
    bitwise_xor_expr     go to state 186
    bitwise_and_expr     go to state 187
    logical_or_expr      go to state 188
    logical_and_expr     go to state 189
    conditional_expr     go to state 190
    assignment_expr      go to state 318


State 253

  195 subscript_expr: postfix_expr '[' . expr ']'

    NUMBER      shift, and go to state 136
    IDENT       shift, and go to state 212
    PLUSPLUS    shift, and go to state 149
    MINUSMINUS  shift, and go to state 150
    SIZEOF      shift, and go to state 151
    '&'         shift, and go to state 152
    '+'         shift, and go to state 153
    '-'         shift, and go to state 154
    '*'         shift, and go to state 155
    '!'         shift, and go to state 156
    '~'         shift, and go to state 157
    '('         shift, and go to state 159

    primary_expr         go to state 171
    postfix_expr         go to state 172
    subscript_expr       go to state 173
    function_call        go to state 174
    comp_selec_expr      go to state 175
    postinc_expr         go to state 176
    postdec_expr         go to state 177
    cast_expr            go to state 178
    unary_expr           go to state 179
    multiplicative_expr  go to state 180
    additive_expr        go to state 181
    shift_expr           go to state 182
    relational_expr      go to state 183
    equality_expr        go to state 184
    bitwise_or_expr      go to state 185
    bitwise_xor_expr     go to state 186
    bitwise_and_expr     go to state 187
    logical_or_expr      go to state 188
    logical_and_expr     go to state 189
    conditional_expr     go to state 190
    assignment_expr      go to state 191
    comma_expr           go to state 192
    expr                 go to state 319


State 254

  250 assignment_expr: unary_expr PLUSEQ . assignment_expr

    NUMBER      shift, and go to state 136
    IDENT       shift, and go to state 212
    PLUSPLUS    shift, and go to state 149
    MINUSMINUS  shift, and go to state 150
    SIZEOF      shift, and go to state 151
    '&'         shift, and go to state 152
    '+'         shift, and go to state 153
    '-'         shift, and go to state 154
    '*'         shift, and go to state 155
    '!'         shift, and go to state 156
    '~'         shift, and go to state 157
    '('         shift, and go to state 159

    primary_expr         go to state 171
    postfix_expr         go to state 172
    subscript_expr       go to state 173
    function_call        go to state 174
    comp_selec_expr      go to state 175
    postinc_expr         go to state 176
    postdec_expr         go to state 177
    cast_expr            go to state 178
    unary_expr           go to state 179
    multiplicative_expr  go to state 180
    additive_expr        go to state 181
    shift_expr           go to state 182
    relational_expr      go to state 183
    equality_expr        go to state 184
    bitwise_or_expr      go to state 185
    bitwise_xor_expr     go to state 186
    bitwise_and_expr     go to state 187
    logical_or_expr      go to state 188
    logical_and_expr     go to state 189
    conditional_expr     go to state 190
    assignment_expr      go to state 320


State 255

  251 assignment_expr: unary_expr MINUSEQ . assignment_expr

    NUMBER      shift, and go to state 136
    IDENT       shift, and go to state 212
    PLUSPLUS    shift, and go to state 149
    MINUSMINUS  shift, and go to state 150
    SIZEOF      shift, and go to state 151
    '&'         shift, and go to state 152
    '+'         shift, and go to state 153
    '-'         shift, and go to state 154
    '*'         shift, and go to state 155
    '!'         shift, and go to state 156
    '~'         shift, and go to state 157
    '('         shift, and go to state 159

    primary_expr         go to state 171
    postfix_expr         go to state 172
    subscript_expr       go to state 173
    function_call        go to state 174
    comp_selec_expr      go to state 175
    postinc_expr         go to state 176
    postdec_expr         go to state 177
    cast_expr            go to state 178
    unary_expr           go to state 179
    multiplicative_expr  go to state 180
    additive_expr        go to state 181
    shift_expr           go to state 182
    relational_expr      go to state 183
    equality_expr        go to state 184
    bitwise_or_expr      go to state 185
    bitwise_xor_expr     go to state 186
    bitwise_and_expr     go to state 187
    logical_or_expr      go to state 188
    logical_and_expr     go to state 189
    conditional_expr     go to state 190
    assignment_expr      go to state 321


State 256

  252 assignment_expr: unary_expr TIMESEQ . assignment_expr

    NUMBER      shift, and go to state 136
    IDENT       shift, and go to state 212
    PLUSPLUS    shift, and go to state 149
    MINUSMINUS  shift, and go to state 150
    SIZEOF      shift, and go to state 151
    '&'         shift, and go to state 152
    '+'         shift, and go to state 153
    '-'         shift, and go to state 154
    '*'         shift, and go to state 155
    '!'         shift, and go to state 156
    '~'         shift, and go to state 157
    '('         shift, and go to state 159

    primary_expr         go to state 171
    postfix_expr         go to state 172
    subscript_expr       go to state 173
    function_call        go to state 174
    comp_selec_expr      go to state 175
    postinc_expr         go to state 176
    postdec_expr         go to state 177
    cast_expr            go to state 178
    unary_expr           go to state 179
    multiplicative_expr  go to state 180
    additive_expr        go to state 181
    shift_expr           go to state 182
    relational_expr      go to state 183
    equality_expr        go to state 184
    bitwise_or_expr      go to state 185
    bitwise_xor_expr     go to state 186
    bitwise_and_expr     go to state 187
    logical_or_expr      go to state 188
    logical_and_expr     go to state 189
    conditional_expr     go to state 190
    assignment_expr      go to state 322


State 257

  253 assignment_expr: unary_expr DIVEQ . assignment_expr

    NUMBER      shift, and go to state 136
    IDENT       shift, and go to state 212
    PLUSPLUS    shift, and go to state 149
    MINUSMINUS  shift, and go to state 150
    SIZEOF      shift, and go to state 151
    '&'         shift, and go to state 152
    '+'         shift, and go to state 153
    '-'         shift, and go to state 154
    '*'         shift, and go to state 155
    '!'         shift, and go to state 156
    '~'         shift, and go to state 157
    '('         shift, and go to state 159

    primary_expr         go to state 171
    postfix_expr         go to state 172
    subscript_expr       go to state 173
    function_call        go to state 174
    comp_selec_expr      go to state 175
    postinc_expr         go to state 176
    postdec_expr         go to state 177
    cast_expr            go to state 178
    unary_expr           go to state 179
    multiplicative_expr  go to state 180
    additive_expr        go to state 181
    shift_expr           go to state 182
    relational_expr      go to state 183
    equality_expr        go to state 184
    bitwise_or_expr      go to state 185
    bitwise_xor_expr     go to state 186
    bitwise_and_expr     go to state 187
    logical_or_expr      go to state 188
    logical_and_expr     go to state 189
    conditional_expr     go to state 190
    assignment_expr      go to state 323


State 258

  254 assignment_expr: unary_expr MODEQ . assignment_expr

    NUMBER      shift, and go to state 136
    IDENT       shift, and go to state 212
    PLUSPLUS    shift, and go to state 149
    MINUSMINUS  shift, and go to state 150
    SIZEOF      shift, and go to state 151
    '&'         shift, and go to state 152
    '+'         shift, and go to state 153
    '-'         shift, and go to state 154
    '*'         shift, and go to state 155
    '!'         shift, and go to state 156
    '~'         shift, and go to state 157
    '('         shift, and go to state 159

    primary_expr         go to state 171
    postfix_expr         go to state 172
    subscript_expr       go to state 173
    function_call        go to state 174
    comp_selec_expr      go to state 175
    postinc_expr         go to state 176
    postdec_expr         go to state 177
    cast_expr            go to state 178
    unary_expr           go to state 179
    multiplicative_expr  go to state 180
    additive_expr        go to state 181
    shift_expr           go to state 182
    relational_expr      go to state 183
    equality_expr        go to state 184
    bitwise_or_expr      go to state 185
    bitwise_xor_expr     go to state 186
    bitwise_and_expr     go to state 187
    logical_or_expr      go to state 188
    logical_and_expr     go to state 189
    conditional_expr     go to state 190
    assignment_expr      go to state 324


State 259

  255 assignment_expr: unary_expr SHLEQ . assignment_expr

    NUMBER      shift, and go to state 136
    IDENT       shift, and go to state 212
    PLUSPLUS    shift, and go to state 149
    MINUSMINUS  shift, and go to state 150
    SIZEOF      shift, and go to state 151
    '&'         shift, and go to state 152
    '+'         shift, and go to state 153
    '-'         shift, and go to state 154
    '*'         shift, and go to state 155
    '!'         shift, and go to state 156
    '~'         shift, and go to state 157
    '('         shift, and go to state 159

    primary_expr         go to state 171
    postfix_expr         go to state 172
    subscript_expr       go to state 173
    function_call        go to state 174
    comp_selec_expr      go to state 175
    postinc_expr         go to state 176
    postdec_expr         go to state 177
    cast_expr            go to state 178
    unary_expr           go to state 179
    multiplicative_expr  go to state 180
    additive_expr        go to state 181
    shift_expr           go to state 182
    relational_expr      go to state 183
    equality_expr        go to state 184
    bitwise_or_expr      go to state 185
    bitwise_xor_expr     go to state 186
    bitwise_and_expr     go to state 187
    logical_or_expr      go to state 188
    logical_and_expr     go to state 189
    conditional_expr     go to state 190
    assignment_expr      go to state 325


State 260

  256 assignment_expr: unary_expr SHREQ . assignment_expr

    NUMBER      shift, and go to state 136
    IDENT       shift, and go to state 212
    PLUSPLUS    shift, and go to state 149
    MINUSMINUS  shift, and go to state 150
    SIZEOF      shift, and go to state 151
    '&'         shift, and go to state 152
    '+'         shift, and go to state 153
    '-'         shift, and go to state 154
    '*'         shift, and go to state 155
    '!'         shift, and go to state 156
    '~'         shift, and go to state 157
    '('         shift, and go to state 159

    primary_expr         go to state 171
    postfix_expr         go to state 172
    subscript_expr       go to state 173
    function_call        go to state 174
    comp_selec_expr      go to state 175
    postinc_expr         go to state 176
    postdec_expr         go to state 177
    cast_expr            go to state 178
    unary_expr           go to state 179
    multiplicative_expr  go to state 180
    additive_expr        go to state 181
    shift_expr           go to state 182
    relational_expr      go to state 183
    equality_expr        go to state 184
    bitwise_or_expr      go to state 185
    bitwise_xor_expr     go to state 186
    bitwise_and_expr     go to state 187
    logical_or_expr      go to state 188
    logical_and_expr     go to state 189
    conditional_expr     go to state 190
    assignment_expr      go to state 326


State 261

  257 assignment_expr: unary_expr ANDEQ . assignment_expr

    NUMBER      shift, and go to state 136
    IDENT       shift, and go to state 212
    PLUSPLUS    shift, and go to state 149
    MINUSMINUS  shift, and go to state 150
    SIZEOF      shift, and go to state 151
    '&'         shift, and go to state 152
    '+'         shift, and go to state 153
    '-'         shift, and go to state 154
    '*'         shift, and go to state 155
    '!'         shift, and go to state 156
    '~'         shift, and go to state 157
    '('         shift, and go to state 159

    primary_expr         go to state 171
    postfix_expr         go to state 172
    subscript_expr       go to state 173
    function_call        go to state 174
    comp_selec_expr      go to state 175
    postinc_expr         go to state 176
    postdec_expr         go to state 177
    cast_expr            go to state 178
    unary_expr           go to state 179
    multiplicative_expr  go to state 180
    additive_expr        go to state 181
    shift_expr           go to state 182
    relational_expr      go to state 183
    equality_expr        go to state 184
    bitwise_or_expr      go to state 185
    bitwise_xor_expr     go to state 186
    bitwise_and_expr     go to state 187
    logical_or_expr      go to state 188
    logical_and_expr     go to state 189
    conditional_expr     go to state 190
    assignment_expr      go to state 327


State 262

  258 assignment_expr: unary_expr OREQ . assignment_expr

    NUMBER      shift, and go to state 136
    IDENT       shift, and go to state 212
    PLUSPLUS    shift, and go to state 149
    MINUSMINUS  shift, and go to state 150
    SIZEOF      shift, and go to state 151
    '&'         shift, and go to state 152
    '+'         shift, and go to state 153
    '-'         shift, and go to state 154
    '*'         shift, and go to state 155
    '!'         shift, and go to state 156
    '~'         shift, and go to state 157
    '('         shift, and go to state 159

    primary_expr         go to state 171
    postfix_expr         go to state 172
    subscript_expr       go to state 173
    function_call        go to state 174
    comp_selec_expr      go to state 175
    postinc_expr         go to state 176
    postdec_expr         go to state 177
    cast_expr            go to state 178
    unary_expr           go to state 179
    multiplicative_expr  go to state 180
    additive_expr        go to state 181
    shift_expr           go to state 182
    relational_expr      go to state 183
    equality_expr        go to state 184
    bitwise_or_expr      go to state 185
    bitwise_xor_expr     go to state 186
    bitwise_and_expr     go to state 187
    logical_or_expr      go to state 188
    logical_and_expr     go to state 189
    conditional_expr     go to state 190
    assignment_expr      go to state 328


State 263

  259 assignment_expr: unary_expr XOREQ . assignment_expr

    NUMBER      shift, and go to state 136
    IDENT       shift, and go to state 212
    PLUSPLUS    shift, and go to state 149
    MINUSMINUS  shift, and go to state 150
    SIZEOF      shift, and go to state 151
    '&'         shift, and go to state 152
    '+'         shift, and go to state 153
    '-'         shift, and go to state 154
    '*'         shift, and go to state 155
    '!'         shift, and go to state 156
    '~'         shift, and go to state 157
    '('         shift, and go to state 159

    primary_expr         go to state 171
    postfix_expr         go to state 172
    subscript_expr       go to state 173
    function_call        go to state 174
    comp_selec_expr      go to state 175
    postinc_expr         go to state 176
    postdec_expr         go to state 177
    cast_expr            go to state 178
    unary_expr           go to state 179
    multiplicative_expr  go to state 180
    additive_expr        go to state 181
    shift_expr           go to state 182
    relational_expr      go to state 183
    equality_expr        go to state 184
    bitwise_or_expr      go to state 185
    bitwise_xor_expr     go to state 186
    bitwise_and_expr     go to state 187
    logical_or_expr      go to state 188
    logical_and_expr     go to state 189
    conditional_expr     go to state 190
    assignment_expr      go to state 329


State 264

  249 assignment_expr: unary_expr '=' . assignment_expr

    NUMBER      shift, and go to state 136
    IDENT       shift, and go to state 212
    PLUSPLUS    shift, and go to state 149
    MINUSMINUS  shift, and go to state 150
    SIZEOF      shift, and go to state 151
    '&'         shift, and go to state 152
    '+'         shift, and go to state 153
    '-'         shift, and go to state 154
    '*'         shift, and go to state 155
    '!'         shift, and go to state 156
    '~'         shift, and go to state 157
    '('         shift, and go to state 159

    primary_expr         go to state 171
    postfix_expr         go to state 172
    subscript_expr       go to state 173
    function_call        go to state 174
    comp_selec_expr      go to state 175
    postinc_expr         go to state 176
    postdec_expr         go to state 177
    cast_expr            go to state 178
    unary_expr           go to state 179
    multiplicative_expr  go to state 180
    additive_expr        go to state 181
    shift_expr           go to state 182
    relational_expr      go to state 183
    equality_expr        go to state 184
    bitwise_or_expr      go to state 185
    bitwise_xor_expr     go to state 186
    bitwise_and_expr     go to state 187
    logical_or_expr      go to state 188
    logical_and_expr     go to state 189
    conditional_expr     go to state 190
    assignment_expr      go to state 330


State 265

  219 multiplicative_expr: multiplicative_expr '*' . cast_expr

    NUMBER      shift, and go to state 136
    IDENT       shift, and go to state 212
    PLUSPLUS    shift, and go to state 149
    MINUSMINUS  shift, and go to state 150
    SIZEOF      shift, and go to state 151
    '&'         shift, and go to state 152
    '+'         shift, and go to state 153
    '-'         shift, and go to state 154
    '*'         shift, and go to state 155
    '!'         shift, and go to state 156
    '~'         shift, and go to state 157
    '('         shift, and go to state 159

    primary_expr     go to state 171
    postfix_expr     go to state 172
    subscript_expr   go to state 173
    function_call    go to state 174
    comp_selec_expr  go to state 175
    postinc_expr     go to state 176
    postdec_expr     go to state 177
    cast_expr        go to state 331
    unary_expr       go to state 236


State 266

  220 multiplicative_expr: multiplicative_expr '/' . cast_expr

    NUMBER      shift, and go to state 136
    IDENT       shift, and go to state 212
    PLUSPLUS    shift, and go to state 149
    MINUSMINUS  shift, and go to state 150
    SIZEOF      shift, and go to state 151
    '&'         shift, and go to state 152
    '+'         shift, and go to state 153
    '-'         shift, and go to state 154
    '*'         shift, and go to state 155
    '!'         shift, and go to state 156
    '~'         shift, and go to state 157
    '('         shift, and go to state 159

    primary_expr     go to state 171
    postfix_expr     go to state 172
    subscript_expr   go to state 173
    function_call    go to state 174
    comp_selec_expr  go to state 175
    postinc_expr     go to state 176
    postdec_expr     go to state 177
    cast_expr        go to state 332
    unary_expr       go to state 236


State 267

  221 multiplicative_expr: multiplicative_expr '%' . cast_expr

    NUMBER      shift, and go to state 136
    IDENT       shift, and go to state 212
    PLUSPLUS    shift, and go to state 149
    MINUSMINUS  shift, and go to state 150
    SIZEOF      shift, and go to state 151
    '&'         shift, and go to state 152
    '+'         shift, and go to state 153
    '-'         shift, and go to state 154
    '*'         shift, and go to state 155
    '!'         shift, and go to state 156
    '~'         shift, and go to state 157
    '('         shift, and go to state 159

    primary_expr     go to state 171
    postfix_expr     go to state 172
    subscript_expr   go to state 173
    function_call    go to state 174
    comp_selec_expr  go to state 175
    postinc_expr     go to state 176
    postdec_expr     go to state 177
    cast_expr        go to state 333
    unary_expr       go to state 236


State 268

  223 additive_expr: additive_expr '+' . multiplicative_expr

    NUMBER      shift, and go to state 136
    IDENT       shift, and go to state 212
    PLUSPLUS    shift, and go to state 149
    MINUSMINUS  shift, and go to state 150
    SIZEOF      shift, and go to state 151
    '&'         shift, and go to state 152
    '+'         shift, and go to state 153
    '-'         shift, and go to state 154
    '*'         shift, and go to state 155
    '!'         shift, and go to state 156
    '~'         shift, and go to state 157
    '('         shift, and go to state 159

    primary_expr         go to state 171
    postfix_expr         go to state 172
    subscript_expr       go to state 173
    function_call        go to state 174
    comp_selec_expr      go to state 175
    postinc_expr         go to state 176
    postdec_expr         go to state 177
    cast_expr            go to state 178
    unary_expr           go to state 236
    multiplicative_expr  go to state 334


State 269

  224 additive_expr: additive_expr '-' . multiplicative_expr

    NUMBER      shift, and go to state 136
    IDENT       shift, and go to state 212
    PLUSPLUS    shift, and go to state 149
    MINUSMINUS  shift, and go to state 150
    SIZEOF      shift, and go to state 151
    '&'         shift, and go to state 152
    '+'         shift, and go to state 153
    '-'         shift, and go to state 154
    '*'         shift, and go to state 155
    '!'         shift, and go to state 156
    '~'         shift, and go to state 157
    '('         shift, and go to state 159

    primary_expr         go to state 171
    postfix_expr         go to state 172
    subscript_expr       go to state 173
    function_call        go to state 174
    comp_selec_expr      go to state 175
    postinc_expr         go to state 176
    postdec_expr         go to state 177
    cast_expr            go to state 178
    unary_expr           go to state 236
    multiplicative_expr  go to state 335


State 270

  226 shift_expr: shift_expr SHL . additive_expr

    NUMBER      shift, and go to state 136
    IDENT       shift, and go to state 212
    PLUSPLUS    shift, and go to state 149
    MINUSMINUS  shift, and go to state 150
    SIZEOF      shift, and go to state 151
    '&'         shift, and go to state 152
    '+'         shift, and go to state 153
    '-'         shift, and go to state 154
    '*'         shift, and go to state 155
    '!'         shift, and go to state 156
    '~'         shift, and go to state 157
    '('         shift, and go to state 159

    primary_expr         go to state 171
    postfix_expr         go to state 172
    subscript_expr       go to state 173
    function_call        go to state 174
    comp_selec_expr      go to state 175
    postinc_expr         go to state 176
    postdec_expr         go to state 177
    cast_expr            go to state 178
    unary_expr           go to state 236
    multiplicative_expr  go to state 180
    additive_expr        go to state 336


State 271

  227 shift_expr: shift_expr SHR . additive_expr

    NUMBER      shift, and go to state 136
    IDENT       shift, and go to state 212
    PLUSPLUS    shift, and go to state 149
    MINUSMINUS  shift, and go to state 150
    SIZEOF      shift, and go to state 151
    '&'         shift, and go to state 152
    '+'         shift, and go to state 153
    '-'         shift, and go to state 154
    '*'         shift, and go to state 155
    '!'         shift, and go to state 156
    '~'         shift, and go to state 157
    '('         shift, and go to state 159

    primary_expr         go to state 171
    postfix_expr         go to state 172
    subscript_expr       go to state 173
    function_call        go to state 174
    comp_selec_expr      go to state 175
    postinc_expr         go to state 176
    postdec_expr         go to state 177
    cast_expr            go to state 178
    unary_expr           go to state 236
    multiplicative_expr  go to state 180
    additive_expr        go to state 337


State 272

  232 relational_expr: relational_expr GTEQ . shift_expr

    NUMBER      shift, and go to state 136
    IDENT       shift, and go to state 212
    PLUSPLUS    shift, and go to state 149
    MINUSMINUS  shift, and go to state 150
    SIZEOF      shift, and go to state 151
    '&'         shift, and go to state 152
    '+'         shift, and go to state 153
    '-'         shift, and go to state 154
    '*'         shift, and go to state 155
    '!'         shift, and go to state 156
    '~'         shift, and go to state 157
    '('         shift, and go to state 159

    primary_expr         go to state 171
    postfix_expr         go to state 172
    subscript_expr       go to state 173
    function_call        go to state 174
    comp_selec_expr      go to state 175
    postinc_expr         go to state 176
    postdec_expr         go to state 177
    cast_expr            go to state 178
    unary_expr           go to state 236
    multiplicative_expr  go to state 180
    additive_expr        go to state 181
    shift_expr           go to state 338


State 273

  231 relational_expr: relational_expr LTEQ . shift_expr

    NUMBER      shift, and go to state 136
    IDENT       shift, and go to state 212
    PLUSPLUS    shift, and go to state 149
    MINUSMINUS  shift, and go to state 150
    SIZEOF      shift, and go to state 151
    '&'         shift, and go to state 152
    '+'         shift, and go to state 153
    '-'         shift, and go to state 154
    '*'         shift, and go to state 155
    '!'         shift, and go to state 156
    '~'         shift, and go to state 157
    '('         shift, and go to state 159

    primary_expr         go to state 171
    postfix_expr         go to state 172
    subscript_expr       go to state 173
    function_call        go to state 174
    comp_selec_expr      go to state 175
    postinc_expr         go to state 176
    postdec_expr         go to state 177
    cast_expr            go to state 178
    unary_expr           go to state 236
    multiplicative_expr  go to state 180
    additive_expr        go to state 181
    shift_expr           go to state 339


State 274

  229 relational_expr: relational_expr '<' . shift_expr

    NUMBER      shift, and go to state 136
    IDENT       shift, and go to state 212
    PLUSPLUS    shift, and go to state 149
    MINUSMINUS  shift, and go to state 150
    SIZEOF      shift, and go to state 151
    '&'         shift, and go to state 152
    '+'         shift, and go to state 153
    '-'         shift, and go to state 154
    '*'         shift, and go to state 155
    '!'         shift, and go to state 156
    '~'         shift, and go to state 157
    '('         shift, and go to state 159

    primary_expr         go to state 171
    postfix_expr         go to state 172
    subscript_expr       go to state 173
    function_call        go to state 174
    comp_selec_expr      go to state 175
    postinc_expr         go to state 176
    postdec_expr         go to state 177
    cast_expr            go to state 178
    unary_expr           go to state 236
    multiplicative_expr  go to state 180
    additive_expr        go to state 181
    shift_expr           go to state 340


State 275

  230 relational_expr: relational_expr '>' . shift_expr

    NUMBER      shift, and go to state 136
    IDENT       shift, and go to state 212
    PLUSPLUS    shift, and go to state 149
    MINUSMINUS  shift, and go to state 150
    SIZEOF      shift, and go to state 151
    '&'         shift, and go to state 152
    '+'         shift, and go to state 153
    '-'         shift, and go to state 154
    '*'         shift, and go to state 155
    '!'         shift, and go to state 156
    '~'         shift, and go to state 157
    '('         shift, and go to state 159

    primary_expr         go to state 171
    postfix_expr         go to state 172
    subscript_expr       go to state 173
    function_call        go to state 174
    comp_selec_expr      go to state 175
    postinc_expr         go to state 176
    postdec_expr         go to state 177
    cast_expr            go to state 178
    unary_expr           go to state 236
    multiplicative_expr  go to state 180
    additive_expr        go to state 181
    shift_expr           go to state 341


State 276

  234 equality_expr: equality_expr EQEQ . relational_expr

    NUMBER      shift, and go to state 136
    IDENT       shift, and go to state 212
    PLUSPLUS    shift, and go to state 149
    MINUSMINUS  shift, and go to state 150
    SIZEOF      shift, and go to state 151
    '&'         shift, and go to state 152
    '+'         shift, and go to state 153
    '-'         shift, and go to state 154
    '*'         shift, and go to state 155
    '!'         shift, and go to state 156
    '~'         shift, and go to state 157
    '('         shift, and go to state 159

    primary_expr         go to state 171
    postfix_expr         go to state 172
    subscript_expr       go to state 173
    function_call        go to state 174
    comp_selec_expr      go to state 175
    postinc_expr         go to state 176
    postdec_expr         go to state 177
    cast_expr            go to state 178
    unary_expr           go to state 236
    multiplicative_expr  go to state 180
    additive_expr        go to state 181
    shift_expr           go to state 182
    relational_expr      go to state 342


State 277

  235 equality_expr: equality_expr NOTEQ . relational_expr

    NUMBER      shift, and go to state 136
    IDENT       shift, and go to state 212
    PLUSPLUS    shift, and go to state 149
    MINUSMINUS  shift, and go to state 150
    SIZEOF      shift, and go to state 151
    '&'         shift, and go to state 152
    '+'         shift, and go to state 153
    '-'         shift, and go to state 154
    '*'         shift, and go to state 155
    '!'         shift, and go to state 156
    '~'         shift, and go to state 157
    '('         shift, and go to state 159

    primary_expr         go to state 171
    postfix_expr         go to state 172
    subscript_expr       go to state 173
    function_call        go to state 174
    comp_selec_expr      go to state 175
    postinc_expr         go to state 176
    postdec_expr         go to state 177
    cast_expr            go to state 178
    unary_expr           go to state 236
    multiplicative_expr  go to state 180
    additive_expr        go to state 181
    shift_expr           go to state 182
    relational_expr      go to state 343


State 278

  237 bitwise_or_expr: bitwise_or_expr '|' . bitwise_xor_expr

    NUMBER      shift, and go to state 136
    IDENT       shift, and go to state 212
    PLUSPLUS    shift, and go to state 149
    MINUSMINUS  shift, and go to state 150
    SIZEOF      shift, and go to state 151
    '&'         shift, and go to state 152
    '+'         shift, and go to state 153
    '-'         shift, and go to state 154
    '*'         shift, and go to state 155
    '!'         shift, and go to state 156
    '~'         shift, and go to state 157
    '('         shift, and go to state 159

    primary_expr         go to state 171
    postfix_expr         go to state 172
    subscript_expr       go to state 173
    function_call        go to state 174
    comp_selec_expr      go to state 175
    postinc_expr         go to state 176
    postdec_expr         go to state 177
    cast_expr            go to state 178
    unary_expr           go to state 236
    multiplicative_expr  go to state 180
    additive_expr        go to state 181
    shift_expr           go to state 182
    relational_expr      go to state 183
    equality_expr        go to state 184
    bitwise_xor_expr     go to state 344
    bitwise_and_expr     go to state 187


State 279

  239 bitwise_xor_expr: bitwise_xor_expr '^' . bitwise_and_expr

    NUMBER      shift, and go to state 136
    IDENT       shift, and go to state 212
    PLUSPLUS    shift, and go to state 149
    MINUSMINUS  shift, and go to state 150
    SIZEOF      shift, and go to state 151
    '&'         shift, and go to state 152
    '+'         shift, and go to state 153
    '-'         shift, and go to state 154
    '*'         shift, and go to state 155
    '!'         shift, and go to state 156
    '~'         shift, and go to state 157
    '('         shift, and go to state 159

    primary_expr         go to state 171
    postfix_expr         go to state 172
    subscript_expr       go to state 173
    function_call        go to state 174
    comp_selec_expr      go to state 175
    postinc_expr         go to state 176
    postdec_expr         go to state 177
    cast_expr            go to state 178
    unary_expr           go to state 236
    multiplicative_expr  go to state 180
    additive_expr        go to state 181
    shift_expr           go to state 182
    relational_expr      go to state 183
    equality_expr        go to state 184
    bitwise_and_expr     go to state 345


State 280

  241 bitwise_and_expr: bitwise_and_expr '&' . equality_expr

    NUMBER      shift, and go to state 136
    IDENT       shift, and go to state 212
    PLUSPLUS    shift, and go to state 149
    MINUSMINUS  shift, and go to state 150
    SIZEOF      shift, and go to state 151
    '&'         shift, and go to state 152
    '+'         shift, and go to state 153
    '-'         shift, and go to state 154
    '*'         shift, and go to state 155
    '!'         shift, and go to state 156
    '~'         shift, and go to state 157
    '('         shift, and go to state 159

    primary_expr         go to state 171
    postfix_expr         go to state 172
    subscript_expr       go to state 173
    function_call        go to state 174
    comp_selec_expr      go to state 175
    postinc_expr         go to state 176
    postdec_expr         go to state 177
    cast_expr            go to state 178
    unary_expr           go to state 236
    multiplicative_expr  go to state 180
    additive_expr        go to state 181
    shift_expr           go to state 182
    relational_expr      go to state 183
    equality_expr        go to state 346


State 281

  243 logical_or_expr: logical_or_expr LOGOR . logical_and_expr

    NUMBER      shift, and go to state 136
    IDENT       shift, and go to state 212
    PLUSPLUS    shift, and go to state 149
    MINUSMINUS  shift, and go to state 150
    SIZEOF      shift, and go to state 151
    '&'         shift, and go to state 152
    '+'         shift, and go to state 153
    '-'         shift, and go to state 154
    '*'         shift, and go to state 155
    '!'         shift, and go to state 156
    '~'         shift, and go to state 157
    '('         shift, and go to state 159

    primary_expr         go to state 171
    postfix_expr         go to state 172
    subscript_expr       go to state 173
    function_call        go to state 174
    comp_selec_expr      go to state 175
    postinc_expr         go to state 176
    postdec_expr         go to state 177
    cast_expr            go to state 178
    unary_expr           go to state 236
    multiplicative_expr  go to state 180
    additive_expr        go to state 181
    shift_expr           go to state 182
    relational_expr      go to state 183
    equality_expr        go to state 184
    bitwise_or_expr      go to state 185
    bitwise_xor_expr     go to state 186
    bitwise_and_expr     go to state 187
    logical_and_expr     go to state 347


State 282

  247 conditional_expr: logical_or_expr '?' . expr ':' conditional_expr

    NUMBER      shift, and go to state 136
    IDENT       shift, and go to state 212
    PLUSPLUS    shift, and go to state 149
    MINUSMINUS  shift, and go to state 150
    SIZEOF      shift, and go to state 151
    '&'         shift, and go to state 152
    '+'         shift, and go to state 153
    '-'         shift, and go to state 154
    '*'         shift, and go to state 155
    '!'         shift, and go to state 156
    '~'         shift, and go to state 157
    '('         shift, and go to state 159

    primary_expr         go to state 171
    postfix_expr         go to state 172
    subscript_expr       go to state 173
    function_call        go to state 174
    comp_selec_expr      go to state 175
    postinc_expr         go to state 176
    postdec_expr         go to state 177
    cast_expr            go to state 178
    unary_expr           go to state 179
    multiplicative_expr  go to state 180
    additive_expr        go to state 181
    shift_expr           go to state 182
    relational_expr      go to state 183
    equality_expr        go to state 184
    bitwise_or_expr      go to state 185
    bitwise_xor_expr     go to state 186
    bitwise_and_expr     go to state 187
    logical_or_expr      go to state 188
    logical_and_expr     go to state 189
    conditional_expr     go to state 190
    assignment_expr      go to state 191
    comma_expr           go to state 192
    expr                 go to state 348


State 283

  245 logical_and_expr: logical_and_expr LOGAND . bitwise_or_expr

    NUMBER      shift, and go to state 136
    IDENT       shift, and go to state 212
    PLUSPLUS    shift, and go to state 149
    MINUSMINUS  shift, and go to state 150
    SIZEOF      shift, and go to state 151
    '&'         shift, and go to state 152
    '+'         shift, and go to state 153
    '-'         shift, and go to state 154
    '*'         shift, and go to state 155
    '!'         shift, and go to state 156
    '~'         shift, and go to state 157
    '('         shift, and go to state 159

    primary_expr         go to state 171
    postfix_expr         go to state 172
    subscript_expr       go to state 173
    function_call        go to state 174
    comp_selec_expr      go to state 175
    postinc_expr         go to state 176
    postdec_expr         go to state 177
    cast_expr            go to state 178
    unary_expr           go to state 236
    multiplicative_expr  go to state 180
    additive_expr        go to state 181
    shift_expr           go to state 182
    relational_expr      go to state 183
    equality_expr        go to state 184
    bitwise_or_expr      go to state 349
    bitwise_xor_expr     go to state 186
    bitwise_and_expr     go to state 187


State 284

  261 comma_expr: comma_expr ',' . assignment_expr

    NUMBER      shift, and go to state 136
    IDENT       shift, and go to state 212
    PLUSPLUS    shift, and go to state 149
    MINUSMINUS  shift, and go to state 150
    SIZEOF      shift, and go to state 151
    '&'         shift, and go to state 152
    '+'         shift, and go to state 153
    '-'         shift, and go to state 154
    '*'         shift, and go to state 155
    '!'         shift, and go to state 156
    '~'         shift, and go to state 157
    '('         shift, and go to state 159

    primary_expr         go to state 171
    postfix_expr         go to state 172
    subscript_expr       go to state 173
    function_call        go to state 174
    comp_selec_expr      go to state 175
    postinc_expr         go to state 176
    postdec_expr         go to state 177
    cast_expr            go to state 178
    unary_expr           go to state 179
    multiplicative_expr  go to state 180
    additive_expr        go to state 181
    shift_expr           go to state 182
    relational_expr      go to state 183
    equality_expr        go to state 184
    bitwise_or_expr      go to state 185
    bitwise_xor_expr     go to state 186
    bitwise_and_expr     go to state 187
    logical_or_expr      go to state 188
    logical_and_expr     go to state 189
    conditional_expr     go to state 190
    assignment_expr      go to state 350


State 285

  147 stmt: expr ';' .

    $default  reduce using rule 147 (stmt)


State 286

   80 direct_decl: '(' . declarator ')'
  136 direct_abstract_decl: '(' . abstract_decl ')'
  144                     | '(' . param_type_list ')'
  146                     | '(' . ')'

    IDENT     shift, and go to state 68
    ENUM      shift, and go to state 3
    AUTO      shift, and go to state 4
    EXTERN    shift, and go to state 5
    REGISTER  shift, and go to state 6
    STATIC    shift, and go to state 7
    CONST     shift, and go to state 8
    RESTRICT  shift, and go to state 9
    VOLATILE  shift, and go to state 10
    CHAR      shift, and go to state 11
    INT       shift, and go to state 12
    DOUBLE    shift, and go to state 13
    FLOAT     shift, and go to state 14
    LONG      shift, and go to state 15
    _BOOL     shift, and go to state 16
    UNION     shift, and go to state 17
    STRUCT    shift, and go to state 69
    SHORT     shift, and go to state 19
    INLINE    shift, and go to state 20
    SIGNED    shift, and go to state 21
    UNSIGNED  shift, and go to state 22
    VOID      shift, and go to state 23
    '*'       shift, and go to state 70
    '('       shift, and go to state 286
    ')'       shift, and go to state 351
    '['       shift, and go to state 287

    decl_spec             go to state 198
    stg_spec              go to state 29
    func_spec             go to state 30
    type_spec             go to state 31
    struct_spec           go to state 199
    type_qual             go to state 33
    declarator            go to state 115
    direct_decl           go to state 79
    simple_decl           go to state 80
    pointer_decl          go to state 81
    pointer               go to state 289
    abstract_decl         go to state 352
    arr_decl              go to state 83
    func_decl             go to state 116
    param_type_list       go to state 353
    param_list            go to state 201
    param_decl            go to state 202
    enum_type_spec        go to state 34
    enum_type_def         go to state 35
    enum_type_ref         go to state 36
    struct_type_spec      go to state 38
    struct_type_def       go to state 39
    struct_type_ref       go to state 40
    union_type_spec       go to state 41
    union_type_def        go to state 42
    union_type_ref        go to state 43
    direct_abstract_decl  go to state 291


State 287

  141 direct_abstract_decl: '[' . NUMBER ']'
  142                     | '[' . expr ']'
  143                     | '[' . '*' ']'
  145                     | '[' . ']'

    NUMBER      shift, and go to state 354
    IDENT       shift, and go to state 212
    PLUSPLUS    shift, and go to state 149
    MINUSMINUS  shift, and go to state 150
    SIZEOF      shift, and go to state 151
    '&'         shift, and go to state 152
    '+'         shift, and go to state 153
    '-'         shift, and go to state 154
    '*'         shift, and go to state 355
    '!'         shift, and go to state 156
    '~'         shift, and go to state 157
    '('         shift, and go to state 159
    ']'         shift, and go to state 356

    primary_expr         go to state 171
    postfix_expr         go to state 172
    subscript_expr       go to state 173
    function_call        go to state 174
    comp_selec_expr      go to state 175
    postinc_expr         go to state 176
    postdec_expr         go to state 177
    cast_expr            go to state 178
    unary_expr           go to state 179
    multiplicative_expr  go to state 180
    additive_expr        go to state 181
    shift_expr           go to state 182
    relational_expr      go to state 183
    equality_expr        go to state 184
    bitwise_or_expr      go to state 185
    bitwise_xor_expr     go to state 186
    bitwise_and_expr     go to state 187
    logical_or_expr      go to state 188
    logical_and_expr     go to state 189
    conditional_expr     go to state 190
    assignment_expr      go to state 191
    comma_expr           go to state 192
    expr                 go to state 357


State 288

   99 param_decl: decl_spec declarator .

    $default  reduce using rule 99 (param_decl)


State 289

   84 pointer_decl: pointer . direct_decl
   87 abstract_decl: pointer .
   89              | pointer . direct_abstract_decl

    IDENT  shift, and go to state 68
    '('    shift, and go to state 286
    '['    shift, and go to state 287

    $default  reduce using rule 87 (abstract_decl)

    direct_decl           go to state 121
    simple_decl           go to state 80
    arr_decl              go to state 83
    func_decl             go to state 116
    direct_abstract_decl  go to state 358


State 290

  101 param_decl: decl_spec abstract_decl .

    $default  reduce using rule 101 (param_decl)


State 291

   88 abstract_decl: direct_abstract_decl .
  137 direct_abstract_decl: direct_abstract_decl . '[' NUMBER ']'
  138                     | direct_abstract_decl . '[' expr ']'
  139                     | direct_abstract_decl . '[' '*' ']'
  140                     | direct_abstract_decl . '(' param_type_list ')'

    '('  shift, and go to state 359
    '['  shift, and go to state 360

    $default  reduce using rule 88 (abstract_decl)


State 292

   92 func_decl: direct_decl '(' param_type_list ')' .

    $default  reduce using rule 92 (func_decl)


State 293

   96 param_type_list: param_list ',' . ELLIPSIS
   98 param_list: param_list ',' . param_decl

    ENUM      shift, and go to state 3
    AUTO      shift, and go to state 4
    EXTERN    shift, and go to state 5
    REGISTER  shift, and go to state 6
    STATIC    shift, and go to state 7
    CONST     shift, and go to state 8
    RESTRICT  shift, and go to state 9
    VOLATILE  shift, and go to state 10
    CHAR      shift, and go to state 11
    INT       shift, and go to state 12
    DOUBLE    shift, and go to state 13
    FLOAT     shift, and go to state 14
    LONG      shift, and go to state 15
    _BOOL     shift, and go to state 16
    UNION     shift, and go to state 17
    STRUCT    shift, and go to state 69
    SHORT     shift, and go to state 19
    INLINE    shift, and go to state 20
    SIGNED    shift, and go to state 21
    UNSIGNED  shift, and go to state 22
    VOID      shift, and go to state 23
    ELLIPSIS  shift, and go to state 361

    decl_spec         go to state 198
    stg_spec          go to state 29
    func_spec         go to state 30
    type_spec         go to state 31
    struct_spec       go to state 199
    type_qual         go to state 33
    param_decl        go to state 362
    enum_type_spec    go to state 34
    enum_type_def     go to state 35
    enum_type_ref     go to state 36
    struct_type_spec  go to state 38
    struct_type_def   go to state 39
    struct_type_ref   go to state 40
    union_type_spec   go to state 41
    union_type_def    go to state 42
    union_type_ref    go to state 43


State 294

  264 ident_list: ident_list ',' . IDENT

    IDENT  shift, and go to state 363


State 295

   94 func_decl: direct_decl '(' ident_list ')' .

    $default  reduce using rule 94 (func_decl)


State 296

   91 arr_decl: direct_decl '[' NUMBER ']' .

    $default  reduce using rule 91 (arr_decl)


State 297

  130 bit_field: declarator ':' NUMBER .

    $default  reduce using rule 130 (bit_field)


State 298

  126 component_decl_list: component_decl_list ',' component_declarator .

    $default  reduce using rule 126 (component_decl_list)


State 299

  107 enum_type_def: ENUM IDENT '{' enum_def_list ',' '}' .

    $default  reduce using rule 107 (enum_type_def)


State 300

  163 iterative_stmt: DO @2 stmt . WHILE '(' expr ')' ';'

    WHILE  shift, and go to state 364


State 301

  172 for_expr: '(' ';' . ';' ';' ')'
  174         | '(' ';' . expr ';' ')'
  175         | '(' ';' . ';' expr ')'
  178         | '(' ';' . expr ';' expr ')'

    NUMBER      shift, and go to state 136
    IDENT       shift, and go to state 212
    PLUSPLUS    shift, and go to state 149
    MINUSMINUS  shift, and go to state 150
    SIZEOF      shift, and go to state 151
    '&'         shift, and go to state 152
    '+'         shift, and go to state 153
    '-'         shift, and go to state 154
    '*'         shift, and go to state 155
    '!'         shift, and go to state 156
    '~'         shift, and go to state 157
    ';'         shift, and go to state 365
    '('         shift, and go to state 159

    primary_expr         go to state 171
    postfix_expr         go to state 172
    subscript_expr       go to state 173
    function_call        go to state 174
    comp_selec_expr      go to state 175
    postinc_expr         go to state 176
    postdec_expr         go to state 177
    cast_expr            go to state 178
    unary_expr           go to state 179
    multiplicative_expr  go to state 180
    additive_expr        go to state 181
    shift_expr           go to state 182
    relational_expr      go to state 183
    equality_expr        go to state 184
    bitwise_or_expr      go to state 185
    bitwise_xor_expr     go to state 186
    bitwise_and_expr     go to state 187
    logical_or_expr      go to state 188
    logical_and_expr     go to state 189
    conditional_expr     go to state 190
    assignment_expr      go to state 191
    comma_expr           go to state 192
    expr                 go to state 366


State 302

  173 for_expr: '(' expr . ';' ';' ')'
  176         | '(' expr . ';' expr ';' ')'
  177         | '(' expr . ';' ';' expr ')'
  179         | '(' expr . ';' expr ';' expr ')'

    ';'  shift, and go to state 367


State 303

  166 iterative_stmt: FOR for_expr stmt .

    $default  reduce using rule 166 (iterative_stmt)


State 304

  155 stmt: GOTO IDENT ';' .

    $default  reduce using rule 155 (stmt)


State 305

  159 conditional_stmt: IF '(' expr . ')' @1 conditional_body

    ')'  shift, and go to state 368


State 306

  183 return_stmt: RETURN expr ';' .

    $default  reduce using rule 183 (return_stmt)


State 307

  152 stmt: SWITCH '(' expr . ')' stmt

    ')'  shift, and go to state 369


State 308

  165 iterative_stmt: WHILE '(' expr . ')' @3 stmt

    ')'  shift, and go to state 370


State 309

  208 unary_expr: SIZEOF '(' type_spec . ')'

    ')'  shift, and go to state 371


State 310

  205 cast_expr: '(' type_spec ')' . cast_expr

    NUMBER      shift, and go to state 136
    IDENT       shift, and go to state 212
    PLUSPLUS    shift, and go to state 149
    MINUSMINUS  shift, and go to state 150
    SIZEOF      shift, and go to state 151
    '&'         shift, and go to state 152
    '+'         shift, and go to state 153
    '-'         shift, and go to state 154
    '*'         shift, and go to state 155
    '!'         shift, and go to state 156
    '~'         shift, and go to state 157
    '('         shift, and go to state 159

    primary_expr     go to state 171
    postfix_expr     go to state 172
    subscript_expr   go to state 173
    function_call    go to state 174
    comp_selec_expr  go to state 175
    postinc_expr     go to state 176
    postdec_expr     go to state 177
    cast_expr        go to state 372
    unary_expr       go to state 236


State 311

  206 cast_expr: '(' struct_spec ')' . cast_expr

    NUMBER      shift, and go to state 136
    IDENT       shift, and go to state 212
    PLUSPLUS    shift, and go to state 149
    MINUSMINUS  shift, and go to state 150
    SIZEOF      shift, and go to state 151
    '&'         shift, and go to state 152
    '+'         shift, and go to state 153
    '-'         shift, and go to state 154
    '*'         shift, and go to state 155
    '!'         shift, and go to state 156
    '~'         shift, and go to state 157
    '('         shift, and go to state 159

    primary_expr     go to state 171
    postfix_expr     go to state 172
    subscript_expr   go to state 173
    function_call    go to state 174
    comp_selec_expr  go to state 175
    postinc_expr     go to state 176
    postdec_expr     go to state 177
    cast_expr        go to state 373
    unary_expr       go to state 236


State 312

  188 primary_expr: '(' expr ')' .

    $default  reduce using rule 188 (primary_expr)


State 313

  148 stmt: label ':' stmt .

    $default  reduce using rule 148 (stmt)


State 314

  201 comp_selec_expr: postfix_expr INDSEL IDENT .

    $default  reduce using rule 201 (comp_selec_expr)


State 315

  200 comp_selec_expr: postfix_expr '.' IDENT .

    $default  reduce using rule 200 (comp_selec_expr)


State 316

  197 function_call: postfix_expr '(' ')' .

    $default  reduce using rule 197 (function_call)


State 317

  196 function_call: postfix_expr '(' expr_list . ')'
  199 expr_list: expr_list . ',' assignment_expr

    ','  shift, and go to state 374
    ')'  shift, and go to state 375


State 318

  198 expr_list: assignment_expr .

    $default  reduce using rule 198 (expr_list)


State 319

  195 subscript_expr: postfix_expr '[' expr . ']'

    ']'  shift, and go to state 376


State 320

  250 assignment_expr: unary_expr PLUSEQ assignment_expr .

    $default  reduce using rule 250 (assignment_expr)


State 321

  251 assignment_expr: unary_expr MINUSEQ assignment_expr .

    $default  reduce using rule 251 (assignment_expr)


State 322

  252 assignment_expr: unary_expr TIMESEQ assignment_expr .

    $default  reduce using rule 252 (assignment_expr)


State 323

  253 assignment_expr: unary_expr DIVEQ assignment_expr .

    $default  reduce using rule 253 (assignment_expr)


State 324

  254 assignment_expr: unary_expr MODEQ assignment_expr .

    $default  reduce using rule 254 (assignment_expr)


State 325

  255 assignment_expr: unary_expr SHLEQ assignment_expr .

    $default  reduce using rule 255 (assignment_expr)


State 326

  256 assignment_expr: unary_expr SHREQ assignment_expr .

    $default  reduce using rule 256 (assignment_expr)


State 327

  257 assignment_expr: unary_expr ANDEQ assignment_expr .

    $default  reduce using rule 257 (assignment_expr)


State 328

  258 assignment_expr: unary_expr OREQ assignment_expr .

    $default  reduce using rule 258 (assignment_expr)


State 329

  259 assignment_expr: unary_expr XOREQ assignment_expr .

    $default  reduce using rule 259 (assignment_expr)


State 330

  249 assignment_expr: unary_expr '=' assignment_expr .

    $default  reduce using rule 249 (assignment_expr)


State 331

  219 multiplicative_expr: multiplicative_expr '*' cast_expr .

    $default  reduce using rule 219 (multiplicative_expr)


State 332

  220 multiplicative_expr: multiplicative_expr '/' cast_expr .

    $default  reduce using rule 220 (multiplicative_expr)


State 333

  221 multiplicative_expr: multiplicative_expr '%' cast_expr .

    $default  reduce using rule 221 (multiplicative_expr)


State 334

  219 multiplicative_expr: multiplicative_expr . '*' cast_expr
  220                    | multiplicative_expr . '/' cast_expr
  221                    | multiplicative_expr . '%' cast_expr
  223 additive_expr: additive_expr '+' multiplicative_expr .

    '*'  shift, and go to state 265
    '/'  shift, and go to state 266
    '%'  shift, and go to state 267

    $default  reduce using rule 223 (additive_expr)


State 335

  219 multiplicative_expr: multiplicative_expr . '*' cast_expr
  220                    | multiplicative_expr . '/' cast_expr
  221                    | multiplicative_expr . '%' cast_expr
  224 additive_expr: additive_expr '-' multiplicative_expr .

    '*'  shift, and go to state 265
    '/'  shift, and go to state 266
    '%'  shift, and go to state 267

    $default  reduce using rule 224 (additive_expr)


State 336

  223 additive_expr: additive_expr . '+' multiplicative_expr
  224              | additive_expr . '-' multiplicative_expr
  226 shift_expr: shift_expr SHL additive_expr .

    '+'  shift, and go to state 268
    '-'  shift, and go to state 269

    $default  reduce using rule 226 (shift_expr)


State 337

  223 additive_expr: additive_expr . '+' multiplicative_expr
  224              | additive_expr . '-' multiplicative_expr
  227 shift_expr: shift_expr SHR additive_expr .

    '+'  shift, and go to state 268
    '-'  shift, and go to state 269

    $default  reduce using rule 227 (shift_expr)


State 338

  226 shift_expr: shift_expr . SHL additive_expr
  227           | shift_expr . SHR additive_expr
  232 relational_expr: relational_expr GTEQ shift_expr .

    SHL  shift, and go to state 270
    SHR  shift, and go to state 271

    $default  reduce using rule 232 (relational_expr)


State 339

  226 shift_expr: shift_expr . SHL additive_expr
  227           | shift_expr . SHR additive_expr
  231 relational_expr: relational_expr LTEQ shift_expr .

    SHL  shift, and go to state 270
    SHR  shift, and go to state 271

    $default  reduce using rule 231 (relational_expr)


State 340

  226 shift_expr: shift_expr . SHL additive_expr
  227           | shift_expr . SHR additive_expr
  229 relational_expr: relational_expr '<' shift_expr .

    SHL  shift, and go to state 270
    SHR  shift, and go to state 271

    $default  reduce using rule 229 (relational_expr)


State 341

  226 shift_expr: shift_expr . SHL additive_expr
  227           | shift_expr . SHR additive_expr
  230 relational_expr: relational_expr '>' shift_expr .

    SHL  shift, and go to state 270
    SHR  shift, and go to state 271

    $default  reduce using rule 230 (relational_expr)


State 342

  229 relational_expr: relational_expr . '<' shift_expr
  230                | relational_expr . '>' shift_expr
  231                | relational_expr . LTEQ shift_expr
  232                | relational_expr . GTEQ shift_expr
  234 equality_expr: equality_expr EQEQ relational_expr .

    GTEQ  shift, and go to state 272
    LTEQ  shift, and go to state 273
    '<'   shift, and go to state 274
    '>'   shift, and go to state 275

    $default  reduce using rule 234 (equality_expr)


State 343

  229 relational_expr: relational_expr . '<' shift_expr
  230                | relational_expr . '>' shift_expr
  231                | relational_expr . LTEQ shift_expr
  232                | relational_expr . GTEQ shift_expr
  235 equality_expr: equality_expr NOTEQ relational_expr .

    GTEQ  shift, and go to state 272
    LTEQ  shift, and go to state 273
    '<'   shift, and go to state 274
    '>'   shift, and go to state 275

    $default  reduce using rule 235 (equality_expr)


State 344

  237 bitwise_or_expr: bitwise_or_expr '|' bitwise_xor_expr .
  239 bitwise_xor_expr: bitwise_xor_expr . '^' bitwise_and_expr

    '^'  shift, and go to state 279

    $default  reduce using rule 237 (bitwise_or_expr)


State 345

  239 bitwise_xor_expr: bitwise_xor_expr '^' bitwise_and_expr .
  241 bitwise_and_expr: bitwise_and_expr . '&' equality_expr

    '&'  shift, and go to state 280

    $default  reduce using rule 239 (bitwise_xor_expr)


State 346

  234 equality_expr: equality_expr . EQEQ relational_expr
  235              | equality_expr . NOTEQ relational_expr
  241 bitwise_and_expr: bitwise_and_expr '&' equality_expr .

    EQEQ   shift, and go to state 276
    NOTEQ  shift, and go to state 277

    $default  reduce using rule 241 (bitwise_and_expr)


State 347

  243 logical_or_expr: logical_or_expr LOGOR logical_and_expr .
  245 logical_and_expr: logical_and_expr . LOGAND bitwise_or_expr

    LOGAND  shift, and go to state 283

    $default  reduce using rule 243 (logical_or_expr)


State 348

  247 conditional_expr: logical_or_expr '?' expr . ':' conditional_expr

    ':'  shift, and go to state 377


State 349

  237 bitwise_or_expr: bitwise_or_expr . '|' bitwise_xor_expr
  245 logical_and_expr: logical_and_expr LOGAND bitwise_or_expr .

    '|'  shift, and go to state 278

    $default  reduce using rule 245 (logical_and_expr)


State 350

  261 comma_expr: comma_expr ',' assignment_expr .

    $default  reduce using rule 261 (comma_expr)


State 351

  146 direct_abstract_decl: '(' ')' .

    $default  reduce using rule 146 (direct_abstract_decl)


State 352

  136 direct_abstract_decl: '(' abstract_decl . ')'

    ')'  shift, and go to state 378


State 353

  144 direct_abstract_decl: '(' param_type_list . ')'

    ')'  shift, and go to state 379


State 354

  141 direct_abstract_decl: '[' NUMBER . ']'
  187 primary_expr: NUMBER .

    ']'  shift, and go to state 380

    ']'       [reduce using rule 187 (primary_expr)]
    $default  reduce using rule 187 (primary_expr)


State 355

  143 direct_abstract_decl: '[' '*' . ']'
  215 unary_expr: '*' . cast_expr

    NUMBER      shift, and go to state 136
    IDENT       shift, and go to state 212
    PLUSPLUS    shift, and go to state 149
    MINUSMINUS  shift, and go to state 150
    SIZEOF      shift, and go to state 151
    '&'         shift, and go to state 152
    '+'         shift, and go to state 153
    '-'         shift, and go to state 154
    '*'         shift, and go to state 155
    '!'         shift, and go to state 156
    '~'         shift, and go to state 157
    '('         shift, and go to state 159
    ']'         shift, and go to state 381

    primary_expr     go to state 171
    postfix_expr     go to state 172
    subscript_expr   go to state 173
    function_call    go to state 174
    comp_selec_expr  go to state 175
    postinc_expr     go to state 176
    postdec_expr     go to state 177
    cast_expr        go to state 239
    unary_expr       go to state 236


State 356

  145 direct_abstract_decl: '[' ']' .

    $default  reduce using rule 145 (direct_abstract_decl)


State 357

  142 direct_abstract_decl: '[' expr . ']'

    ']'  shift, and go to state 382


State 358

   89 abstract_decl: pointer direct_abstract_decl .
  137 direct_abstract_decl: direct_abstract_decl . '[' NUMBER ']'
  138                     | direct_abstract_decl . '[' expr ']'
  139                     | direct_abstract_decl . '[' '*' ']'
  140                     | direct_abstract_decl . '(' param_type_list ')'

    '('  shift, and go to state 359
    '['  shift, and go to state 360

    $default  reduce using rule 89 (abstract_decl)


State 359

  140 direct_abstract_decl: direct_abstract_decl '(' . param_type_list ')'

    ENUM      shift, and go to state 3
    AUTO      shift, and go to state 4
    EXTERN    shift, and go to state 5
    REGISTER  shift, and go to state 6
    STATIC    shift, and go to state 7
    CONST     shift, and go to state 8
    RESTRICT  shift, and go to state 9
    VOLATILE  shift, and go to state 10
    CHAR      shift, and go to state 11
    INT       shift, and go to state 12
    DOUBLE    shift, and go to state 13
    FLOAT     shift, and go to state 14
    LONG      shift, and go to state 15
    _BOOL     shift, and go to state 16
    UNION     shift, and go to state 17
    STRUCT    shift, and go to state 69
    SHORT     shift, and go to state 19
    INLINE    shift, and go to state 20
    SIGNED    shift, and go to state 21
    UNSIGNED  shift, and go to state 22
    VOID      shift, and go to state 23

    decl_spec         go to state 198
    stg_spec          go to state 29
    func_spec         go to state 30
    type_spec         go to state 31
    struct_spec       go to state 199
    type_qual         go to state 33
    param_type_list   go to state 383
    param_list        go to state 201
    param_decl        go to state 202
    enum_type_spec    go to state 34
    enum_type_def     go to state 35
    enum_type_ref     go to state 36
    struct_type_spec  go to state 38
    struct_type_def   go to state 39
    struct_type_ref   go to state 40
    union_type_spec   go to state 41
    union_type_def    go to state 42
    union_type_ref    go to state 43


State 360

  137 direct_abstract_decl: direct_abstract_decl '[' . NUMBER ']'
  138                     | direct_abstract_decl '[' . expr ']'
  139                     | direct_abstract_decl '[' . '*' ']'

    NUMBER      shift, and go to state 384
    IDENT       shift, and go to state 212
    PLUSPLUS    shift, and go to state 149
    MINUSMINUS  shift, and go to state 150
    SIZEOF      shift, and go to state 151
    '&'         shift, and go to state 152
    '+'         shift, and go to state 153
    '-'         shift, and go to state 154
    '*'         shift, and go to state 385
    '!'         shift, and go to state 156
    '~'         shift, and go to state 157
    '('         shift, and go to state 159

    primary_expr         go to state 171
    postfix_expr         go to state 172
    subscript_expr       go to state 173
    function_call        go to state 174
    comp_selec_expr      go to state 175
    postinc_expr         go to state 176
    postdec_expr         go to state 177
    cast_expr            go to state 178
    unary_expr           go to state 179
    multiplicative_expr  go to state 180
    additive_expr        go to state 181
    shift_expr           go to state 182
    relational_expr      go to state 183
    equality_expr        go to state 184
    bitwise_or_expr      go to state 185
    bitwise_xor_expr     go to state 186
    bitwise_and_expr     go to state 187
    logical_or_expr      go to state 188
    logical_and_expr     go to state 189
    conditional_expr     go to state 190
    assignment_expr      go to state 191
    comma_expr           go to state 192
    expr                 go to state 386


State 361

   96 param_type_list: param_list ',' ELLIPSIS .

    $default  reduce using rule 96 (param_type_list)


State 362

   98 param_list: param_list ',' param_decl .

    $default  reduce using rule 98 (param_list)


State 363

  264 ident_list: ident_list ',' IDENT .

    $default  reduce using rule 264 (ident_list)


State 364

  163 iterative_stmt: DO @2 stmt WHILE . '(' expr ')' ';'

    '('  shift, and go to state 387


State 365

  172 for_expr: '(' ';' ';' . ';' ')'
  175         | '(' ';' ';' . expr ')'

    NUMBER      shift, and go to state 136
    IDENT       shift, and go to state 212
    PLUSPLUS    shift, and go to state 149
    MINUSMINUS  shift, and go to state 150
    SIZEOF      shift, and go to state 151
    '&'         shift, and go to state 152
    '+'         shift, and go to state 153
    '-'         shift, and go to state 154
    '*'         shift, and go to state 155
    '!'         shift, and go to state 156
    '~'         shift, and go to state 157
    ';'         shift, and go to state 388
    '('         shift, and go to state 159

    primary_expr         go to state 171
    postfix_expr         go to state 172
    subscript_expr       go to state 173
    function_call        go to state 174
    comp_selec_expr      go to state 175
    postinc_expr         go to state 176
    postdec_expr         go to state 177
    cast_expr            go to state 178
    unary_expr           go to state 179
    multiplicative_expr  go to state 180
    additive_expr        go to state 181
    shift_expr           go to state 182
    relational_expr      go to state 183
    equality_expr        go to state 184
    bitwise_or_expr      go to state 185
    bitwise_xor_expr     go to state 186
    bitwise_and_expr     go to state 187
    logical_or_expr      go to state 188
    logical_and_expr     go to state 189
    conditional_expr     go to state 190
    assignment_expr      go to state 191
    comma_expr           go to state 192
    expr                 go to state 389


State 366

  174 for_expr: '(' ';' expr . ';' ')'
  178         | '(' ';' expr . ';' expr ')'

    ';'  shift, and go to state 390


State 367

  173 for_expr: '(' expr ';' . ';' ')'
  176         | '(' expr ';' . expr ';' ')'
  177         | '(' expr ';' . ';' expr ')'
  179         | '(' expr ';' . expr ';' expr ')'

    NUMBER      shift, and go to state 136
    IDENT       shift, and go to state 212
    PLUSPLUS    shift, and go to state 149
    MINUSMINUS  shift, and go to state 150
    SIZEOF      shift, and go to state 151
    '&'         shift, and go to state 152
    '+'         shift, and go to state 153
    '-'         shift, and go to state 154
    '*'         shift, and go to state 155
    '!'         shift, and go to state 156
    '~'         shift, and go to state 157
    ';'         shift, and go to state 391
    '('         shift, and go to state 159

    primary_expr         go to state 171
    postfix_expr         go to state 172
    subscript_expr       go to state 173
    function_call        go to state 174
    comp_selec_expr      go to state 175
    postinc_expr         go to state 176
    postdec_expr         go to state 177
    cast_expr            go to state 178
    unary_expr           go to state 179
    multiplicative_expr  go to state 180
    additive_expr        go to state 181
    shift_expr           go to state 182
    relational_expr      go to state 183
    equality_expr        go to state 184
    bitwise_or_expr      go to state 185
    bitwise_xor_expr     go to state 186
    bitwise_and_expr     go to state 187
    logical_or_expr      go to state 188
    logical_and_expr     go to state 189
    conditional_expr     go to state 190
    assignment_expr      go to state 191
    comma_expr           go to state 192
    expr                 go to state 392


State 368

  159 conditional_stmt: IF '(' expr ')' . @1 conditional_body

    $default  reduce using rule 158 (@1)

    @1  go to state 393


State 369

  152 stmt: SWITCH '(' expr ')' . stmt

    NUMBER      shift, and go to state 136
    IDENT       shift, and go to state 137
    BREAK       shift, and go to state 138
    CASE        shift, and go to state 139
    CONTINUE    shift, and go to state 140
    DEFAULT     shift, and go to state 141
    DO          shift, and go to state 142
    FOR         shift, and go to state 143
    GOTO        shift, and go to state 144
    IF          shift, and go to state 145
    RETURN      shift, and go to state 146
    SWITCH      shift, and go to state 147
    WHILE       shift, and go to state 148
    PLUSPLUS    shift, and go to state 149
    MINUSMINUS  shift, and go to state 150
    SIZEOF      shift, and go to state 151
    '&'         shift, and go to state 152
    '+'         shift, and go to state 153
    '-'         shift, and go to state 154
    '*'         shift, and go to state 155
    '!'         shift, and go to state 156
    '~'         shift, and go to state 157
    ';'         shift, and go to state 158
    '('         shift, and go to state 159
    '{'         shift, and go to state 66

    stmt                 go to state 394
    conditional_stmt     go to state 165
    iterative_stmt       go to state 166
    label                go to state 167
    compound_stmt        go to state 168
    return_stmt          go to state 169
    null_stmt            go to state 170
    primary_expr         go to state 171
    postfix_expr         go to state 172
    subscript_expr       go to state 173
    function_call        go to state 174
    comp_selec_expr      go to state 175
    postinc_expr         go to state 176
    postdec_expr         go to state 177
    cast_expr            go to state 178
    unary_expr           go to state 179
    multiplicative_expr  go to state 180
    additive_expr        go to state 181
    shift_expr           go to state 182
    relational_expr      go to state 183
    equality_expr        go to state 184
    bitwise_or_expr      go to state 185
    bitwise_xor_expr     go to state 186
    bitwise_and_expr     go to state 187
    logical_or_expr      go to state 188
    logical_and_expr     go to state 189
    conditional_expr     go to state 190
    assignment_expr      go to state 191
    comma_expr           go to state 192
    expr                 go to state 193


State 370

  165 iterative_stmt: WHILE '(' expr ')' . @3 stmt

    $default  reduce using rule 164 (@3)

    @3  go to state 395


State 371

  208 unary_expr: SIZEOF '(' type_spec ')' .

    $default  reduce using rule 208 (unary_expr)


State 372

  205 cast_expr: '(' type_spec ')' cast_expr .

    $default  reduce using rule 205 (cast_expr)


State 373

  206 cast_expr: '(' struct_spec ')' cast_expr .

    $default  reduce using rule 206 (cast_expr)


State 374

  199 expr_list: expr_list ',' . assignment_expr

    NUMBER      shift, and go to state 136
    IDENT       shift, and go to state 212
    PLUSPLUS    shift, and go to state 149
    MINUSMINUS  shift, and go to state 150
    SIZEOF      shift, and go to state 151
    '&'         shift, and go to state 152
    '+'         shift, and go to state 153
    '-'         shift, and go to state 154
    '*'         shift, and go to state 155
    '!'         shift, and go to state 156
    '~'         shift, and go to state 157
    '('         shift, and go to state 159

    primary_expr         go to state 171
    postfix_expr         go to state 172
    subscript_expr       go to state 173
    function_call        go to state 174
    comp_selec_expr      go to state 175
    postinc_expr         go to state 176
    postdec_expr         go to state 177
    cast_expr            go to state 178
    unary_expr           go to state 179
    multiplicative_expr  go to state 180
    additive_expr        go to state 181
    shift_expr           go to state 182
    relational_expr      go to state 183
    equality_expr        go to state 184
    bitwise_or_expr      go to state 185
    bitwise_xor_expr     go to state 186
    bitwise_and_expr     go to state 187
    logical_or_expr      go to state 188
    logical_and_expr     go to state 189
    conditional_expr     go to state 190
    assignment_expr      go to state 396


State 375

  196 function_call: postfix_expr '(' expr_list ')' .

    $default  reduce using rule 196 (function_call)


State 376

  195 subscript_expr: postfix_expr '[' expr ']' .

    $default  reduce using rule 195 (subscript_expr)


State 377

  247 conditional_expr: logical_or_expr '?' expr ':' . conditional_expr

    NUMBER      shift, and go to state 136
    IDENT       shift, and go to state 212
    PLUSPLUS    shift, and go to state 149
    MINUSMINUS  shift, and go to state 150
    SIZEOF      shift, and go to state 151
    '&'         shift, and go to state 152
    '+'         shift, and go to state 153
    '-'         shift, and go to state 154
    '*'         shift, and go to state 155
    '!'         shift, and go to state 156
    '~'         shift, and go to state 157
    '('         shift, and go to state 159

    primary_expr         go to state 171
    postfix_expr         go to state 172
    subscript_expr       go to state 173
    function_call        go to state 174
    comp_selec_expr      go to state 175
    postinc_expr         go to state 176
    postdec_expr         go to state 177
    cast_expr            go to state 178
    unary_expr           go to state 236
    multiplicative_expr  go to state 180
    additive_expr        go to state 181
    shift_expr           go to state 182
    relational_expr      go to state 183
    equality_expr        go to state 184
    bitwise_or_expr      go to state 185
    bitwise_xor_expr     go to state 186
    bitwise_and_expr     go to state 187
    logical_or_expr      go to state 188
    logical_and_expr     go to state 189
    conditional_expr     go to state 397


State 378

  136 direct_abstract_decl: '(' abstract_decl ')' .

    $default  reduce using rule 136 (direct_abstract_decl)


State 379

  144 direct_abstract_decl: '(' param_type_list ')' .

    $default  reduce using rule 144 (direct_abstract_decl)


State 380

  141 direct_abstract_decl: '[' NUMBER ']' .

    $default  reduce using rule 141 (direct_abstract_decl)


State 381

  143 direct_abstract_decl: '[' '*' ']' .

    $default  reduce using rule 143 (direct_abstract_decl)


State 382

  142 direct_abstract_decl: '[' expr ']' .

    $default  reduce using rule 142 (direct_abstract_decl)


State 383

  140 direct_abstract_decl: direct_abstract_decl '(' param_type_list . ')'

    ')'  shift, and go to state 398


State 384

  137 direct_abstract_decl: direct_abstract_decl '[' NUMBER . ']'
  187 primary_expr: NUMBER .

    ']'  shift, and go to state 399

    ']'       [reduce using rule 187 (primary_expr)]
    $default  reduce using rule 187 (primary_expr)


State 385

  139 direct_abstract_decl: direct_abstract_decl '[' '*' . ']'
  215 unary_expr: '*' . cast_expr

    NUMBER      shift, and go to state 136
    IDENT       shift, and go to state 212
    PLUSPLUS    shift, and go to state 149
    MINUSMINUS  shift, and go to state 150
    SIZEOF      shift, and go to state 151
    '&'         shift, and go to state 152
    '+'         shift, and go to state 153
    '-'         shift, and go to state 154
    '*'         shift, and go to state 155
    '!'         shift, and go to state 156
    '~'         shift, and go to state 157
    '('         shift, and go to state 159
    ']'         shift, and go to state 400

    primary_expr     go to state 171
    postfix_expr     go to state 172
    subscript_expr   go to state 173
    function_call    go to state 174
    comp_selec_expr  go to state 175
    postinc_expr     go to state 176
    postdec_expr     go to state 177
    cast_expr        go to state 239
    unary_expr       go to state 236


State 386

  138 direct_abstract_decl: direct_abstract_decl '[' expr . ']'

    ']'  shift, and go to state 401


State 387

  163 iterative_stmt: DO @2 stmt WHILE '(' . expr ')' ';'

    NUMBER      shift, and go to state 136
    IDENT       shift, and go to state 212
    PLUSPLUS    shift, and go to state 149
    MINUSMINUS  shift, and go to state 150
    SIZEOF      shift, and go to state 151
    '&'         shift, and go to state 152
    '+'         shift, and go to state 153
    '-'         shift, and go to state 154
    '*'         shift, and go to state 155
    '!'         shift, and go to state 156
    '~'         shift, and go to state 157
    '('         shift, and go to state 159

    primary_expr         go to state 171
    postfix_expr         go to state 172
    subscript_expr       go to state 173
    function_call        go to state 174
    comp_selec_expr      go to state 175
    postinc_expr         go to state 176
    postdec_expr         go to state 177
    cast_expr            go to state 178
    unary_expr           go to state 179
    multiplicative_expr  go to state 180
    additive_expr        go to state 181
    shift_expr           go to state 182
    relational_expr      go to state 183
    equality_expr        go to state 184
    bitwise_or_expr      go to state 185
    bitwise_xor_expr     go to state 186
    bitwise_and_expr     go to state 187
    logical_or_expr      go to state 188
    logical_and_expr     go to state 189
    conditional_expr     go to state 190
    assignment_expr      go to state 191
    comma_expr           go to state 192
    expr                 go to state 402


State 388

  172 for_expr: '(' ';' ';' ';' . ')'

    ')'  shift, and go to state 403


State 389

  175 for_expr: '(' ';' ';' expr . ')'

    ')'  shift, and go to state 404


State 390

  174 for_expr: '(' ';' expr ';' . ')'
  178         | '(' ';' expr ';' . expr ')'

    NUMBER      shift, and go to state 136
    IDENT       shift, and go to state 212
    PLUSPLUS    shift, and go to state 149
    MINUSMINUS  shift, and go to state 150
    SIZEOF      shift, and go to state 151
    '&'         shift, and go to state 152
    '+'         shift, and go to state 153
    '-'         shift, and go to state 154
    '*'         shift, and go to state 155
    '!'         shift, and go to state 156
    '~'         shift, and go to state 157
    '('         shift, and go to state 159
    ')'         shift, and go to state 405

    primary_expr         go to state 171
    postfix_expr         go to state 172
    subscript_expr       go to state 173
    function_call        go to state 174
    comp_selec_expr      go to state 175
    postinc_expr         go to state 176
    postdec_expr         go to state 177
    cast_expr            go to state 178
    unary_expr           go to state 179
    multiplicative_expr  go to state 180
    additive_expr        go to state 181
    shift_expr           go to state 182
    relational_expr      go to state 183
    equality_expr        go to state 184
    bitwise_or_expr      go to state 185
    bitwise_xor_expr     go to state 186
    bitwise_and_expr     go to state 187
    logical_or_expr      go to state 188
    logical_and_expr     go to state 189
    conditional_expr     go to state 190
    assignment_expr      go to state 191
    comma_expr           go to state 192
    expr                 go to state 406


State 391

  173 for_expr: '(' expr ';' ';' . ')'
  177         | '(' expr ';' ';' . expr ')'

    NUMBER      shift, and go to state 136
    IDENT       shift, and go to state 212
    PLUSPLUS    shift, and go to state 149
    MINUSMINUS  shift, and go to state 150
    SIZEOF      shift, and go to state 151
    '&'         shift, and go to state 152
    '+'         shift, and go to state 153
    '-'         shift, and go to state 154
    '*'         shift, and go to state 155
    '!'         shift, and go to state 156
    '~'         shift, and go to state 157
    '('         shift, and go to state 159
    ')'         shift, and go to state 407

    primary_expr         go to state 171
    postfix_expr         go to state 172
    subscript_expr       go to state 173
    function_call        go to state 174
    comp_selec_expr      go to state 175
    postinc_expr         go to state 176
    postdec_expr         go to state 177
    cast_expr            go to state 178
    unary_expr           go to state 179
    multiplicative_expr  go to state 180
    additive_expr        go to state 181
    shift_expr           go to state 182
    relational_expr      go to state 183
    equality_expr        go to state 184
    bitwise_or_expr      go to state 185
    bitwise_xor_expr     go to state 186
    bitwise_and_expr     go to state 187
    logical_or_expr      go to state 188
    logical_and_expr     go to state 189
    conditional_expr     go to state 190
    assignment_expr      go to state 191
    comma_expr           go to state 192
    expr                 go to state 408


State 392

  176 for_expr: '(' expr ';' expr . ';' ')'
  179         | '(' expr ';' expr . ';' expr ')'

    ';'  shift, and go to state 409


State 393

  159 conditional_stmt: IF '(' expr ')' @1 . conditional_body

    NUMBER      shift, and go to state 136
    IDENT       shift, and go to state 137
    BREAK       shift, and go to state 138
    CASE        shift, and go to state 139
    CONTINUE    shift, and go to state 140
    DEFAULT     shift, and go to state 141
    DO          shift, and go to state 142
    FOR         shift, and go to state 143
    GOTO        shift, and go to state 144
    IF          shift, and go to state 145
    RETURN      shift, and go to state 146
    SWITCH      shift, and go to state 147
    WHILE       shift, and go to state 148
    PLUSPLUS    shift, and go to state 149
    MINUSMINUS  shift, and go to state 150
    SIZEOF      shift, and go to state 151
    '&'         shift, and go to state 152
    '+'         shift, and go to state 153
    '-'         shift, and go to state 154
    '*'         shift, and go to state 155
    '!'         shift, and go to state 156
    '~'         shift, and go to state 157
    ';'         shift, and go to state 158
    '('         shift, and go to state 159
    '{'         shift, and go to state 66

    stmt                 go to state 410
    conditional_stmt     go to state 165
    conditional_body     go to state 411
    iterative_stmt       go to state 166
    label                go to state 167
    compound_stmt        go to state 168
    return_stmt          go to state 169
    null_stmt            go to state 170
    primary_expr         go to state 171
    postfix_expr         go to state 172
    subscript_expr       go to state 173
    function_call        go to state 174
    comp_selec_expr      go to state 175
    postinc_expr         go to state 176
    postdec_expr         go to state 177
    cast_expr            go to state 178
    unary_expr           go to state 179
    multiplicative_expr  go to state 180
    additive_expr        go to state 181
    shift_expr           go to state 182
    relational_expr      go to state 183
    equality_expr        go to state 184
    bitwise_or_expr      go to state 185
    bitwise_xor_expr     go to state 186
    bitwise_and_expr     go to state 187
    logical_or_expr      go to state 188
    logical_and_expr     go to state 189
    conditional_expr     go to state 190
    assignment_expr      go to state 191
    comma_expr           go to state 192
    expr                 go to state 193


State 394

  152 stmt: SWITCH '(' expr ')' stmt .

    $default  reduce using rule 152 (stmt)


State 395

  165 iterative_stmt: WHILE '(' expr ')' @3 . stmt

    NUMBER      shift, and go to state 136
    IDENT       shift, and go to state 137
    BREAK       shift, and go to state 138
    CASE        shift, and go to state 139
    CONTINUE    shift, and go to state 140
    DEFAULT     shift, and go to state 141
    DO          shift, and go to state 142
    FOR         shift, and go to state 143
    GOTO        shift, and go to state 144
    IF          shift, and go to state 145
    RETURN      shift, and go to state 146
    SWITCH      shift, and go to state 147
    WHILE       shift, and go to state 148
    PLUSPLUS    shift, and go to state 149
    MINUSMINUS  shift, and go to state 150
    SIZEOF      shift, and go to state 151
    '&'         shift, and go to state 152
    '+'         shift, and go to state 153
    '-'         shift, and go to state 154
    '*'         shift, and go to state 155
    '!'         shift, and go to state 156
    '~'         shift, and go to state 157
    ';'         shift, and go to state 158
    '('         shift, and go to state 159
    '{'         shift, and go to state 66

    stmt                 go to state 412
    conditional_stmt     go to state 165
    iterative_stmt       go to state 166
    label                go to state 167
    compound_stmt        go to state 168
    return_stmt          go to state 169
    null_stmt            go to state 170
    primary_expr         go to state 171
    postfix_expr         go to state 172
    subscript_expr       go to state 173
    function_call        go to state 174
    comp_selec_expr      go to state 175
    postinc_expr         go to state 176
    postdec_expr         go to state 177
    cast_expr            go to state 178
    unary_expr           go to state 179
    multiplicative_expr  go to state 180
    additive_expr        go to state 181
    shift_expr           go to state 182
    relational_expr      go to state 183
    equality_expr        go to state 184
    bitwise_or_expr      go to state 185
    bitwise_xor_expr     go to state 186
    bitwise_and_expr     go to state 187
    logical_or_expr      go to state 188
    logical_and_expr     go to state 189
    conditional_expr     go to state 190
    assignment_expr      go to state 191
    comma_expr           go to state 192
    expr                 go to state 193


State 396

  199 expr_list: expr_list ',' assignment_expr .

    $default  reduce using rule 199 (expr_list)


State 397

  247 conditional_expr: logical_or_expr '?' expr ':' conditional_expr .

    $default  reduce using rule 247 (conditional_expr)


State 398

  140 direct_abstract_decl: direct_abstract_decl '(' param_type_list ')' .

    $default  reduce using rule 140 (direct_abstract_decl)


State 399

  137 direct_abstract_decl: direct_abstract_decl '[' NUMBER ']' .

    $default  reduce using rule 137 (direct_abstract_decl)


State 400

  139 direct_abstract_decl: direct_abstract_decl '[' '*' ']' .

    $default  reduce using rule 139 (direct_abstract_decl)


State 401

  138 direct_abstract_decl: direct_abstract_decl '[' expr ']' .

    $default  reduce using rule 138 (direct_abstract_decl)


State 402

  163 iterative_stmt: DO @2 stmt WHILE '(' expr . ')' ';'

    ')'  shift, and go to state 413


State 403

  172 for_expr: '(' ';' ';' ';' ')' .

    $default  reduce using rule 172 (for_expr)


State 404

  175 for_expr: '(' ';' ';' expr ')' .

    $default  reduce using rule 175 (for_expr)


State 405

  174 for_expr: '(' ';' expr ';' ')' .

    $default  reduce using rule 174 (for_expr)


State 406

  178 for_expr: '(' ';' expr ';' expr . ')'

    ')'  shift, and go to state 414


State 407

  173 for_expr: '(' expr ';' ';' ')' .

    $default  reduce using rule 173 (for_expr)


State 408

  177 for_expr: '(' expr ';' ';' expr . ')'

    ')'  shift, and go to state 415


State 409

  176 for_expr: '(' expr ';' expr ';' . ')'
  179         | '(' expr ';' expr ';' . expr ')'

    NUMBER      shift, and go to state 136
    IDENT       shift, and go to state 212
    PLUSPLUS    shift, and go to state 149
    MINUSMINUS  shift, and go to state 150
    SIZEOF      shift, and go to state 151
    '&'         shift, and go to state 152
    '+'         shift, and go to state 153
    '-'         shift, and go to state 154
    '*'         shift, and go to state 155
    '!'         shift, and go to state 156
    '~'         shift, and go to state 157
    '('         shift, and go to state 159
    ')'         shift, and go to state 416

    primary_expr         go to state 171
    postfix_expr         go to state 172
    subscript_expr       go to state 173
    function_call        go to state 174
    comp_selec_expr      go to state 175
    postinc_expr         go to state 176
    postdec_expr         go to state 177
    cast_expr            go to state 178
    unary_expr           go to state 179
    multiplicative_expr  go to state 180
    additive_expr        go to state 181
    shift_expr           go to state 182
    relational_expr      go to state 183
    equality_expr        go to state 184
    bitwise_or_expr      go to state 185
    bitwise_xor_expr     go to state 186
    bitwise_and_expr     go to state 187
    logical_or_expr      go to state 188
    logical_and_expr     go to state 189
    conditional_expr     go to state 190
    assignment_expr      go to state 191
    comma_expr           go to state 192
    expr                 go to state 417


State 410

  160 conditional_body: stmt .
  161                 | stmt . ELSE stmt

    ELSE  shift, and go to state 418

    ELSE      [reduce using rule 160 (conditional_body)]
    $default  reduce using rule 160 (conditional_body)


State 411

  159 conditional_stmt: IF '(' expr ')' @1 conditional_body .

    $default  reduce using rule 159 (conditional_stmt)


State 412

  165 iterative_stmt: WHILE '(' expr ')' @3 stmt .

    $default  reduce using rule 165 (iterative_stmt)


State 413

  163 iterative_stmt: DO @2 stmt WHILE '(' expr ')' . ';'

    ';'  shift, and go to state 419


State 414

  178 for_expr: '(' ';' expr ';' expr ')' .

    $default  reduce using rule 178 (for_expr)


State 415

  177 for_expr: '(' expr ';' ';' expr ')' .

    $default  reduce using rule 177 (for_expr)


State 416

  176 for_expr: '(' expr ';' expr ';' ')' .

    $default  reduce using rule 176 (for_expr)


State 417

  179 for_expr: '(' expr ';' expr ';' expr . ')'

    ')'  shift, and go to state 420


State 418

  161 conditional_body: stmt ELSE . stmt

    NUMBER      shift, and go to state 136
    IDENT       shift, and go to state 137
    BREAK       shift, and go to state 138
    CASE        shift, and go to state 139
    CONTINUE    shift, and go to state 140
    DEFAULT     shift, and go to state 141
    DO          shift, and go to state 142
    FOR         shift, and go to state 143
    GOTO        shift, and go to state 144
    IF          shift, and go to state 145
    RETURN      shift, and go to state 146
    SWITCH      shift, and go to state 147
    WHILE       shift, and go to state 148
    PLUSPLUS    shift, and go to state 149
    MINUSMINUS  shift, and go to state 150
    SIZEOF      shift, and go to state 151
    '&'         shift, and go to state 152
    '+'         shift, and go to state 153
    '-'         shift, and go to state 154
    '*'         shift, and go to state 155
    '!'         shift, and go to state 156
    '~'         shift, and go to state 157
    ';'         shift, and go to state 158
    '('         shift, and go to state 159
    '{'         shift, and go to state 66

    stmt                 go to state 421
    conditional_stmt     go to state 165
    iterative_stmt       go to state 166
    label                go to state 167
    compound_stmt        go to state 168
    return_stmt          go to state 169
    null_stmt            go to state 170
    primary_expr         go to state 171
    postfix_expr         go to state 172
    subscript_expr       go to state 173
    function_call        go to state 174
    comp_selec_expr      go to state 175
    postinc_expr         go to state 176
    postdec_expr         go to state 177
    cast_expr            go to state 178
    unary_expr           go to state 179
    multiplicative_expr  go to state 180
    additive_expr        go to state 181
    shift_expr           go to state 182
    relational_expr      go to state 183
    equality_expr        go to state 184
    bitwise_or_expr      go to state 185
    bitwise_xor_expr     go to state 186
    bitwise_and_expr     go to state 187
    logical_or_expr      go to state 188
    logical_and_expr     go to state 189
    conditional_expr     go to state 190
    assignment_expr      go to state 191
    comma_expr           go to state 192
    expr                 go to state 193


State 419

  163 iterative_stmt: DO @2 stmt WHILE '(' expr ')' ';' .

    $default  reduce using rule 163 (iterative_stmt)


State 420

  179 for_expr: '(' expr ';' expr ';' expr ')' .

    $default  reduce using rule 179 (for_expr)


State 421

  161 conditional_body: stmt ELSE stmt .

    $default  reduce using rule 161 (conditional_body)
